@model Arad.Portal.DataLayer.Models.Setting.ShippingSettingDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var dir = "";
    if (CultureInfo.CurrentCulture.TextInfo.IsRightToLeft)
    {
        dir = "rtl";
    }
    else
    {
        dir = "ltr";
    }
}
@section Styles{
    <link href="~/lib/bootstrap-iconpicker/css/bootstrap-iconpicker.css" rel="stylesheet" />
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <link href="~/plugins/datePicker/kamadatepicker.css" rel="stylesheet" />
    }
    <style>
        .text-danger {
            font-size: 12px;
        }

        .btn-circle {
            width: 30px;
            height: 30px;
            padding: 6px 0px;
            border-radius: 15px;
            text-align: center;
            font-size: 12px;
            line-height: 1.42857;
        }

        .card-header {
            background-color: #e0dcdf;
        }
    </style>
}

<h4>  @Language.GetString("Menu_ShippingSetting") </h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <div class="card" id="addShippingSettingCard">
            <div class="card-header">
                <h3 class="card-title" data-toggle="tab">
                    @(!string.IsNullOrWhiteSpace(Model.ShippingSettingId) ?
                     Language.GetString("Edit_ShippingSetting") : Language.GetString("Add_ShippingSetting"))
                </h3>
            </div>

            <div class="card-body">
                <input type="hidden" value="@Model.ShippingSettingId" asp-for="ShippingSettingId" />
                <input type="hidden" value="@Model.AssociatedDomainId" id="hdnAssociatedDomainId" />


                <div class="row">
                    <div class="form-group col-md-3">
                        <label for="CurrencyId">@Language.GetString("Currency")</label><br />
                        <select class="form-control" asp-for="CurrencyId" asp-items="@(new SelectList(ViewBag.CurrencyList,"Value","Text", Model.CurrencyId))">
                        </select>
                        <span data-val-result="currencyId" class="text-danger"></span>
                    </div>
                    @if (!string.IsNullOrWhiteSpace(Model.DomainName) && !ViewBag.IsSystem)
                    {
                        <div class="form-group col-md-3">
                            <label for="domainName">@Language.GetString("DomainName")</label><br />
                            <input type="text" asp-for="@Model.DomainName" class="form-control" value="@Model.DomainName" disabled />
                        </div>
                    }

                    @if (ViewBag.IsSystem)
                    {
                        <div class="form-group col-md-3">
                            <label for="AssociatedDomainId">@Language.GetString("DomainName")</label><br />
                            <select class="form-control" asp-for="AssociatedDomainId" asp-items="@(new SelectList(ViewBag.DomainList,"Value","Text", Model.AssociatedDomainId))">
                            </select>
                        </div>
                    }
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="card" style="background-color: #f0f0f5;">
                            <div class="card-header">
                                <div class="card-title">@Language.GetString("tbl_ShippingTypes")</div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="form-group col-md-3">
                                        <label>@Language.GetString("tbl_ShippingType")</label>
                                        <select class="form-control" id="shippingTypeId" asp-items="@(new SelectList(ViewBag.ShippngTypes,"Value","Text"))">
                                        </select>
                                        <span data-val-result="shippingTypeId" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-md-2" style="text-align:center;margin:auto;">
                                        <div class="mt-4">
                                            @if (dir == "rtl")
                                            {
                                                <label style="font-weight:700;">
                                                    <input type="checkbox" id="chbIsFixedExpense" class="minimal">
                                                    @Language.GetString("tbl_HasFixedExpense")
                                                </label>
                                            }
                                            else
                                            {
                                                <div class="icheck-primary d-inline">
                                                    <input type="checkbox" id="chbIsFixedExpense">
                                                    <label for="chbIsFixedExpense">
                                                        @Language.GetString("tbl_HasFixedExpense")
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label>@Language.GetString("tbl_FixedExpenseValue")</label>
                                        <input type="number" class="form-control" id="fixedExpenseValue" disabled />
                                        <span data-val-result="fixedExpenseValue" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label>@Language.GetString("tbl_Provider")</label>
                                        <select class="form-control" id="ProviderId"
                                                asp-items="@(new SelectList(ViewBag.Providers,"Value","Text"))">
                                        </select>
                                        <span data-val-result="ProviderId" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-md-1" style="text-align:center;margin:auto;">
                                        <div style="margin:auto;display:inline-block;">
                                            <button type="button" class="btn btn-info btn-circle" onclick="addToList();">
                                                <i class="fa fa-plus" style="position: relative;padding: 3px;"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-md-3">
                                        <span data-val-result="shippingList" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <table class="table table-hover table-bordered">
                                            <thead>
                                                <tr style="text-align:center;">
                                                    <th>@Language.GetString("tbl_ShippingType")</th>
                                                    <th class="d-none"></th>
                                                    <th>@Language.GetString("tbl_HasFixedExpense")</th>
                                                    <th>@Language.GetString("tbl_FixedExpenseValue")</th>
                                                    <th>@Language.GetString("tbl_Provider")</th>
                                                    <th class="d-none"></th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody id="shippingList">
                                                @if (Model.AllowedShippingTypes.Count != 0)
                                                {
                                                    @foreach (var item in Model.AllowedShippingTypes)
                                                    {
                                                        <tr style="text-align:center;">
                                                            <td>@item.ShippingTypeText</td>
                                                            <td class="d-none">@item.ShippingTypeId</td>
                                                            <td>@(item.HasFixedExpense ? Language.GetString("Yes") : Language.GetString("No"))</td>
                                                            <td>@($"{@item.FixedExpenseValue} {Model.CurrencySymbol}")</td>
                                                            <td>@item.ProviderName</td>
                                                            <td class="d-none">@item.ProviderId</td>
                                                            <td>
                                                                <button type="button" class="btn btn-danger btn-circle" onclick="deleteFromList(this);">
                                                                    <i class="fa fa-minus" style="position: relative;padding:3px;"></i>
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr style="text-align:center;">
                                                        <td colspan="7">@Language.GetString("AlertAndMessage_NoDataToShow")</td>
                                                    </tr>
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer"></div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-3">
                        <label>@Language.GetString("tbl_FromInvoiceExpense")</label>
                        <input type="number" class="form-control" asp-for="@Model.ShippingCoupon.FromInvoiceExpense"
                               value="@Model.ShippingCoupon.FromInvoiceExpense"  min="0"  />
                        <span data-val-result="fromInvoiceExpense" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-3">
                        <label>@Language.GetString("tbl_ShippingExpense")</label>
                        <input type="number" class="form-control" asp-for="@Model.ShippingCoupon.ShippingExpense"
                               value ="@Model.ShippingCoupon.ShippingExpense" min="0" />
                        @*<span data-val-result="shippingExpense" class="text-danger"></span>*@
                    </div>
                    <div class="form-group col-md-3">
                        <label>@Language.GetString("StartDate")</label>
                        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                        {
                            <div class="input-group-prepend ">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <input autocomplete="off" id="dtpStartDate" type="text" class="form-control" />
                            </div>
                        }
                        else
                        {
                            <div class="input-group date" id="dtpStartDate" data-target-input="nearest">
                                <input type="text" class="form-control datetimepicker-input" />
                                <div class="input-group-append" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        }
                        <span data-val-result="startDate" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-3">
                        <label>@Language.GetString("EndDate")</label>
                        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                        {
                            <div class="input-group-prepend ">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <input autocomplete="off" id="dtpEndDate" type="text" class="form-control" />
                            </div>
                        }
                        else
                        {
                            <div class="input-group date" id="dtpEndDate" data-target-input="nearest">
                                <input type="text" class="form-control datetimepicker-input" />
                                <div class="input-group-append" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        }
                        <span data-val-result="endDate" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row">
                    <input type="button" id="btnAddShippingSetting" value="@Language.GetString("btn_Save")" class="btn btn-block btn-success" />
                    <a asp-action="List" asp-controller="Shipping" class="btn btn-block btn-default">@Language.GetString("btn_Back")</a>
                </div>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <script src="~/plugins/datePicker/kamadatepicker.min.js"></script>
    }
    else
    {
        <script src="~/js/moment.min.js"></script>
        <script src="~/js/siteTemplate/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.min.js"></script>
    }
    @if (dir == "rtl")
    {
        <script src="~/plugins/iCheck/icheck.min.js"></script>
    }
<script>
    var currentCurrencySymbol = "";
        $(document).ready(function () {
            debugger;
            if ("@Model.ShippingSettingId" != "")
            {
                LoadData();
            }
             //icheckboxes radiobuttons
            @*if ("@dir" == "rtl") {
                $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                    checkboxClass: 'icheckbox_minimal-blue',
                    radioClass: 'iradio_minimal-blue'
                });

                $("#chbIsFixedExpense").iCheck("check", )
            }*@

             //datetimepicker
            if ("@CultureInfo.CurrentCulture.Name" === "fa-IR")
            {
                kamaDatepicker('dtpStartDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
                kamaDatepicker('dtpEndDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
            }
            else
            {
                $('#dtpStartDate').datetimepicker({
                    format: 'L'
                });
                $('#dtpEndDate').datetimepicker({
                    format: 'L'
                });
            }


            $("#CurrencyId").change(function () {
                if ($("#CurrencyId").val() != "" && $("#CurrencyId").val() != "-1") {
                    $.ajax({
                        url: "/Shipping/GetSymbolOfCurrency?currencyId" + $("#CurrencyId").val(),
                        /*data: dataModel,*/
                        contentType: 'application/json',
                        type: 'Get',
                        success: function (result) {
                            currentCurrencySymbol = result.symbol;

                        }
                    });
                }
            });


            $("#chbIsFixedExpense").click(function () {
                debugger;
                if ($(this).prop("checked"))
                {
                    $("#fixedExpenseValue").removeAttr("disabled");
                    $("#ProviderId").attr("disabled", "disabled");
                } else
                {
                    $("#ProviderId").removeAttr("disabled")
                    $("#fixedExpenseValue").attr("disabled", "disabled");
                }
            });
        $("#btnAddShippingSetting").click(function () {
            debugger;
                var flag = false;
                if ($("#CurrencyId").val() == "" || $("#CurrencyId").val() == "-1" )
                {
                    $("span[data-val-result='CurrencyId']").html('@Language.GetString("AlertAndMessage_SelectOneItem")');
                    flag = true;
                }

                if ($("#shippingList tr").length == 0) {
                    $("span[data-val-result='shippingList']").html('@Language.GetString("AlertAndMessage_FillShippingWay")');
                    flag = true;
                }

            if ($("#ShippingCoupon_FromInvoiceExpense").val() != "0" ) {
                    if($("#dtpStartDate").val() == "")
                    {
                            $("span[data-val-result='startDate']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
                            flag = true;
                    }
                }
                if (!flag) {

            var dto = FillDataToSend();
                    $.ajax({
                        url: "@Model.ShippingSettingId" != "" ? "/Shipping/Edit" : "/Shipping/Add",
                    /*data: dataModel,*/
                    contentType: 'application/json',
                    data: JSON.stringify(dto),
                type: 'Post',
                beforeSend: function () {
                    debugger;
                    AddLoading($("#addShippingSettingCard"));
                },
                success: function (result) {
                    debugger;
                    if (result.status === "Success") {
                        Swal.fire({
                            icon: 'success',
                            text: result.message,
                            showConfirmButton: false,
                            timer: 3000
                        }).then(() => {
                            window.location.href = '@Url.Action("List")';
                        });
                    }else
                    if (result.status === "ModelError") {
                        var spanErrorList = $('span[data-val-result]');
                        if (spanErrorList.length > 1) {
                            spanErrorList.each(function() {
                                $(this).html("");
                                $(this).parent().removeClass("has-error");
                            });
                        } else {
                            spanErrorList.html("");
                            spanErrorList.parent().removeClass("has-error");
                        }
                        if (result.modelStateErrors !== null) {
                                $('[data-val-result=' + value.key + ']').html(value.errorMessage);
                                $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                            }
                        }
                    },
                @*error: function (xhr, ajaxOptions, thrownError) {
                    alert("@error");
                    alert(xhr.status);
                    alert(thrownError);
                },*@
                complete: function () {
                    removeLoading($("#addShippingSettingCard"));
                }
                });
                }

        });
        });


    function LoadData()
    {
        @*if ('@Model.ShippingCoupon' != "") {*@
            if ("@Model.ShippingCoupon.PersianStartDate" != "") {
                $("#dtpStartDate").val('@Model.ShippingCoupon.PersianStartDate');
            }
            if ("@Model.ShippingCoupon.PersianEndDate" != "") {
                $("#dtpEndDate").val('@Model.ShippingCoupon.PersianEndDate');
            }
      /*  }*/

    }
    // function chbClick(sender) {
    //    alert("click");
    //    debugger;
    //    if ($(sender).prop("checked")) {
    //        $("#fixedExpenseValue").removeAttr("disabled");
    //        $("#ProviderId").attr("disabled", "disabled");
    //    } else {
    //        $("#ProviderId").removeAttr("disabled")
    //        $("#fixedExpenseValue").attr("disabled", "disabled");
    //    }
    //}
    //function chbChange(sender) {
    //    alert("change");
    //    debugger;
    //    if ($(sender).prop("checked")) {
    //        $("#fixedExpenseValue").removeAttr("disabled");
    //        $("#ProviderId").attr("disabled", "disabled");
    //    } else {
    //        $("#ProviderId").removeAttr("disabled")
    //        $("#fixedExpenseValue").attr("disabled", "disabled");
    //    }
    //}

        function FillDataToSend() {
            debugger;
            var obj = {};
            obj.AllowedShippingTypes = [];
            obj.ShippingCoupon = {};
            obj.ShippingSettingId = $("#ShippingSettingId").val();
            if ($("#AssociatedDomainId") != undefined) {
                obj.AssociatedDomainId = $("#AssociatedDomainId").val();
                obj.DomainName = $("#AssociatedDomainId option:selected").text();
            } else {
                obj.AssociatedDomainId = $("#hdnAssociatedDomainId").val();
            }
            obj.CurrencyId = $("#CurrencyId").val();

            //shipping
            $("#shippingList tr").each(function () {

                var innerModel = {};
                innerModel.ShippingTypeText = $(this).find("td:eq(0)").text();
                innerModel.ShippingTypeId = $(this).find("td:eq(1)").text();
                if ($(this).find("td:eq(2)").text() == '@Language.GetString("Yes")')
                {
                    innerModel.HasFixedExpense = true;
                } else
                {
                    innerModel.HasFixedExpense = false;
                }
                innerModel.FixedExpenseValue = parseFloat($(this).find("td:eq(3)").text().split(" ")[0]);
                innerModel.ProviderId = $(this).find("td:eq(5)").text();
                obj.AllowedShippingTypes.push(innerModel);

            });

            if ($("#ShippingCoupon_FromInvoiceExpense").val() != "0") {
                obj.ShippingCoupon.FromInvoiceExpense = parseFloat($("#ShippingCoupon_FromInvoiceExpense").val());
                obj.ShippingCoupon.ShippingExpense = parseFloat($("#ShippingCoupon_ShippingExpense").val());
                if ($("#dtpStartDate").val() != "")
                {
                    debugger;
                    obj.ShippingCoupon.PersianStartDate = $("#dtpStartDate").val();
                }
                if ($("#dtpEndDate").val() != "")
                {
                    debugger;
                    obj.ShippingCoupon.PersianEndDate = $("#dtpEndDate").val();
                }
            }
            return obj;
        }

       function addToList() {
           debugger;
        var flag = false;
        $("span[data-val-result='shippingTypeId']").html("");
        $("span[data-val-result='fixedExpenseValue']").html("");
        $("span[data-val-result='ProviderId']").html("");
           if ($("#shippingTypeId").val() == "" || $("#shippingTypeId").val() == "-1") {
               $("span[data-val-result='shippingTypeId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
            flag = true;
           }
           if ($("#chbIsFixedExpense").prop("checked") && $("#fixedExpenseValue").val() == "") {
               $("span[data-val-result='fixedExpenseValue']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
               flag = true;
           }
           else
               if (!$("#chbIsFixedExpense").prop("checked") &&
               ($("#ProviderId").val() == "" || $("#ProviderId").val() == "-1")) {
               $("span[data-val-result='ProviderId']").html('@Language.GetString("AlertAndMessage_FieldEssential")');
               flag = true;
           }


        if (!flag) {
           appendToList();
        }
    }

    function appendToList() {
        debugger;
        var col = "";

        if (currentCurrencySymbol == "")
        {
            currentCurrencySymbol = '@Model.CurrencySymbol';
        }
        debugger;
        if ($("#chbIsFixedExpense").prop("checked"))
            col = '@Language.GetString("Yes")';
        else
            col = '@Language.GetString("No")';
        tr = "<tr style='text-align:center;'><td>" + $("#shippingTypeId option:selected").text() +
            "</td><td class='d-none'>" + $('#shippingTypeId').val()  +
            "</td><td>" + col +
            "</td><td>" + `${$("#fixedExpenseValue").val()} ${currentCurrencySymbol}` +
            "</td><td>" + $("#ProviderId option:selected").text()+"</td><td class='d-none'>" + $("#ProviderId").val() +
                    "</td><td><button type='button' class='btn btn-sm btn-danger btn-circle' onclick='deleteFromList(this);'>" +
                    "<i class='fa fa-minus' style='position: relative;padding:3px;'></i></button></td></tr>";
        if ($("#shippingList tr").length == 1 && $("#shippingList tr")[0].children.length == 1) {
            $("#shippingList tr")[0].remove();
                     }
        $("#shippingList").append(tr);

        $("#fixedExpenseValue").val("0");
    }

    function deleteFromList(sender) {
        var tr = $(sender).parent().parent();
        $(tr).remove();
    }
</script>
}




