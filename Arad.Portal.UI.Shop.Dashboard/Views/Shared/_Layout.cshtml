<!DOCTYPE html>
@using System.Globalization;
@using Arad.Portal.GeneralLibrary.Utilities;
@using Microsoft.AspNetCore.Http;
@{
    var direction = "";

    var langList = new List<string>() { "fa", "en" };
    string lang = "";
    string userName = "";
    @if(User.Identity.IsAuthenticated)
    {
       userName = _accessor.HttpContext?.User.GetUserName();
    }

    if (CultureInfo.CurrentCulture.TextInfo.IsRightToLeft)
    {
        direction = "rtl";
        ViewBag.dir = "rtl";
    }
    else
    {
        direction = "ltr";
        ViewBag.dir = "ltr";
    }

    switch (CultureInfo.CurrentCulture.Name)
    {
        case "fa-IR":
            lang = "fa";
            break;
        case "en-US":
            lang = "en";
            break;
    }
    //OperationResult operationResult = ViewBag.OperationResult ?? new OperationResult();
    //bool isNotNullOperationResult = ViewBag.OperationResult is not null;
    //bool isSuccess = operationResult is { Succeeded: true };
}
@inject IHttpContextAccessor _accessor

<html dir="@direction" lang="@lang">

<head>
   <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width , initial-scale=1" />
    <meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' />
    <meta http-equiv="content-type" content="text/html;charset=utf-8">
    <meta http-equiv="content-language" content="fa-IR">
    <meta property="og:locale" content="fa_IR" />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="Arad Dashboard" />
    <title>@ViewData["Title"] - Arad.Portal.UI.Dashboard</title>


    @if (direction == "ltr")
    {
        <link href="~/lib/bootstrap5/css/bootstrap.min.css" rel="stylesheet" />
    }
    else
    {
        <link href="~/lib/bootstrap5/css/bootstrap.rtl.min.css" rel="stylesheet" />
        <link href="~/Fonts/IranSans/css/fontiran.css" rel="stylesheet" />

    }


    <link href="~/lib/bootstrap-select/css/bootstrap-select.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
    <link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />
    <link href = "~/lib/animate.css/animate.compat.css" rel="stylesheet"/>

    @await RenderSectionAsync("Styles", required: false)
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap5/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/bootstrap-select/bootstrap-select.min.js"></script>
    <script src="~/lib/bootstrap-select/js/i18n/defaults-@(CultureInfo.CurrentCulture.Name.Replace('-', '_')).js"></script>
    <script src="~/js/LangUniqueness.js"></script>

    @await RenderSectionAsync("Scripts", required: false)

</head>

<body>
    <style>
     .all{
        color : darkblue;
    }
    </style>
  <div id="loading" class="text-center">
        <div class="spinner-border text-danger" style="width: 4rem; height: 4rem;" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <header class="navbar navbar-light shadow navbar-expand flex-md-nowrap p-0 m-0">
        <div class="container-fluid">
            <div class="navbar-brand col-md-3 me-0">
                <img alt="siteLogo" class="navbar-logo" height="50" src="/images/Logo.png" width="50" />
                @Language.GetString("Menu_Dashboard_HomeTitle")
            </div>
            <div class="w-100 text-center fw-semibold" dir="ltr" id="dateTime"></div>
            <div>
                <ul class="list-group list-group-horizontal">
                    <li class="list-group-item border-0 p-0">
                        <a class="nav-link  p-1" role="button">
                            <img src="/imgs/USA.png" onclick="setLang('en-US')" />
                        </a>
                    </li>
                    <li class="list-group-item border-0 p-0">
                        <a class="nav-link p-1" role="button">
                            <img src="/imgs/IRAN.png" onclick="setLang('fa-IR')" />
                        </a>
                    </li>

                </ul>
            </div>
            <div class="collapse navbar-collapse" id="navbarNavDropdown">
                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        <a aria-expanded="false" class="nav-link dropdown-toggle fw-bold" data-bs-toggle="dropdown" href="#" id="navbarDropdownMenuLink" role="button">
                            @userName
                        </a>
                        <ul aria-labelledby="navbarDropdownMenuLink" class="dropdown-menu">
                            <li>
                                <a class="dropdown-item fs" asp-action="ChangePassword" asp-controller="Account">
                                    <i class="fas fa-key"></i>
                                    @Language.GetString("ChangePassword")
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item fs" asp-action="Profile" asp-controller="Account">
                                    <i class="far fa-id-badge"></i>
                                    @Language.GetString("Menu_Profile")
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <a class="dropdown-item fs" asp-action="Logout" asp-controller="Account">
                                    <i class="fas fa-sign-out-alt"></i>
                                    @Language.GetString("btn_Exit")
                                </a>
                            </li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <button aria-controls="bd-docs-nav" aria-expanded="false" aria-label="Toggle docs navigation" class="nav-link btn bg-gradient btn-sm btn-outline-success d-md-flex px-3 ms-3 collapsed" data-bs-target="#bd-docs-nav" data-bs-toggle="collapse" type="button">
                            <span class="navbar-toggler-icon"></span>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </header>

    <div class="container-fluid mt-2">
        <div class="row h-100">
            <nav class="col-md-3 col-lg-2 d-md-block bg-light sidebar shadow collapse shadow-lg" id="bd-docs-nav">
                @await Component.InvokeAsync("SidebarMenu")
            </nav>

            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 pt-2 flex-grow-1" id="mainContent">
                @RenderBody()
            </main>
        </div>
    </div>
    
    <div class="position-fixed left-50 top-0 p-5" id="toastPanel" style="z-index: 11;">
         <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        <div aria-atomic="true" aria-live="assertive" class="toast" id="mainToast" role="alert" autohide="false">
            <div class="toast-body p-3 fs-5 rounded-3 text-center" id="mainToastBody" >
            </div>
        </div>
    </div>

    <div aria-hidden="true" aria-labelledby="confirmModalLabel" class="modal fade" id="confirmModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-light">
                    <h5 class="modal-title" id="confirmModalLabel">
                    </h5>
                    <button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button">
                    </button>
                </div>
                <div class="modal-body" id="confirmModalBody">
                </div>
                <div class="modal-footer">
                    <button class="btn btn-success" onclick="onClickYes()" type="button">
                        @Language.GetString("btn_Confirm")
                    </button>
                    <button class="btn btn-secondary" data-bs-dismiss="modal" type="button">
                        @Language.GetString("btn_NotConfirm")
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>

    $(document).ready(function () {

    });
    var entityId;
    var confirmUrl;
    var typeOfRequest;
    //var bsAlert = new bootstrap.Toast(document.getElementById('mainToast'));

    adjustSidebar();

    window.addEventListener('load',
        () =>
        {

            $("#loading").removeClass('is-active');
            $("#deleteToast").hide();
            $("#toastPanel").hide();
            setInterval(function()
                {
                    const dateTime = new Date();
                    const date = dateTime.toLocaleDateString('@CultureInfo.CurrentCulture.Name') + ' <br/> ' + dateTime.toLocaleTimeString('@CultureInfo.CurrentCulture.Name');
                    $("#dateTime").html(date);
                },
                1000);

           @* if ('@isNotNullOperationResult' === 'True')
            {
                $("#toastPanel").show();
                bsAlert.show();

				if ("@isSuccess" === "False")
                {
                    document.getElementById('mainToastBody').innerHTML = '<i class="fas fa-exclamation-triangle"></i> @operationResult.Message';
                    document.getElementById('mainToastBody').classList.add('alert-danger');

                    setTimeout(function()
                        {
                            $("#toastPanel").hide();
                        },
                        2000);
                }
                else
                {
                    document.getElementById('mainToastBody').innerHTML = '<i class="far fa-check-circle"></i> @operationResult.Message';
                    document.getElementById('mainToastBody').classList.add('alert-success');

                    if ("@string.IsNullOrWhiteSpace(operationResult.Url)" === "False")
                    {
                        setTimeout(function()
                            {
                                window.location.href = '@operationResult.Url';
                            },
                            2500);
                    }
                }
            }*@
       });

    window.addEventListener('resize', adjustSidebar);

    window.addEventListener("beforeunload",
        () => {
            $("#loading").addClass('is-active');
        });
	window.addEventListener('load',
		() =>
		{
			setInterval(function()
				{
					const dateTime = new Date();
					const date = dateTime.toLocaleDateString('@CultureInfo.CurrentCulture.Name') + ' <br/> ' + dateTime.toLocaleTimeString('@CultureInfo.CurrentCulture.Name');
					$("#dateTime").html(date);
				},
				1000);
		});
	function adjustSidebar()
	{
		var side;
		side = document.getElementById('bd-docs-nav');
		if (window.innerWidth >= 576)
		{
			if (!side.classList.contains("show"))
			{
				side.classList.add('show');
			}
		}
		else
		{
			side = document.getElementById('bd-docs-nav');
			if (side.classList.contains("show"))
			{
				side.classList.remove("show");
			}
		}
	}
	function GetDecoded(stringInput)
	{
		var map = { "gt": ">", "&quot;": "\"", "lt": "<", "quot": "\"" /* , … */ };
		return stringInput.replace(/&(#(?:x[0-9a-f]+|\d+)|[a-z]+);?/gi,
			function($0, $1)
			{
				if ($1[0] === "#")
				{
					return String.fromCharCode($1[1].toLowerCase() === "x" ? parseInt($1.substr(2), 16) : parseInt($1.substr(1), 10));
				}
				else
				{
					return map.hasOwnProperty($1) ? map[$1] : $0;
				}
			});
	};
    function setLang(lang) {
        var currentCulture = '@CultureInfo.CurrentCulture.Name';
        if (currentCulture !== lang) {
            $.ajax({
                type: "GET",
                url: '/Account/changeLang?langId=' + lang,
                success: function () {

                    window.location.reload();
                }
            });
        }
    }
 

    function onClickYes()
    {
        debugger;
        $('#confirmModal').modal('hide');
        $("#toastPanel").show();
        $('#mainToastBody').removeClass('alert-success');
        $('#mainToastBody').removeClass('alert-danger');


        $.ajax({
            type: typeOfRequest,
            url: confirmUrl,
            success: function (resultData) {
                debugger;
                if (resultData.status.toLowerCase() === "success") {

                    $('#mainToastBody').html('<i class="far fa-check-circle"></i> @Language.GetString("AlertAndMessage_OperationDoneSuccessfully")');
                    $('#mainToastBody').addClass('alert-success');
                   
                    var toast = new bootstrap.Toast($("#mainToast"));
                    toast.show();
                    setTimeout(function()
                    {
                        window.location.reload();
                    },
                    3000);
                }
                if (resultData.status.toLowerCase() === "error") {
                    showError(resultData.message);
                }
            }
            
        });
    }

    function showError(msg) {
        
        document.getElementById('mainToastBody').innerHTML = `<i class="fas fa-exclamation-triangle"></i> ${msg}`;
        document.getElementById('mainToastBody').classList.add('alert-danger');
        $("#toastPanel").show();
        var toast = new bootstrap.Toast($("#mainToast"));
        toast.show();
    }
    </script>

</body>
</html>



