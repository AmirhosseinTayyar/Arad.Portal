@inject IHttpContextAccessor Accessor;
@using Arad.Portal.DataLayer.Models.User;
@using Microsoft.AspNetCore.Http;
@using Arad.Portal.GeneralLibrary.Utilities;
@using Arad.Portal.DataLayer.Models.Role;
@using Arad.Portal.UI.Shop.Dashboard.ViewComponents; 
@model Arad.Portal.DataLayer.Models.Shared.PagedItems<UserListView>
@{
    var i = ((Model.CurrentPage - 1) * Model.PageSize);
    bool isSearch = false;
    Layout = "~/Views/Shared/_Layout.cshtml";
    System.Collections.Specialized.NameValueCollection queryString = null;
    if (Model.QueryString != null)
    {
        queryString = System.Web.HttpUtility.ParseQueryString(Model.QueryString);
        isSearch = !string.IsNullOrWhiteSpace(queryString["userName"]) ||
                        !string.IsNullOrWhiteSpace(queryString["name"]) ||
                        !string.IsNullOrWhiteSpace(queryString["role"]);

        queryString.Remove("page");
    }
    var userSearchCollapseClass = isSearch ? "panel-collapse in collapse show" : "panel-collapse in collapse";
    var dir = "";
    if (CultureInfo.CurrentCulture.TextInfo.IsRightToLeft)
    {
        dir = "rtl";
    }
    else
    {
        dir = "ltr";
    }

}
@section Styles
{
    <style>
        .userListCell {
            text-align: center;
            vertical-align: middle;
        }

      
        .btn {
            margin: 2px
        }

        img {
            max-width: 100%;
            max-height: 100%;
        }
    </style>
}


<div class="card card-dark">
    <a data-toggle="collapse" data-parent="#accordion" href="#changePassCollapse" aria-expanded="@(!isSearch ? "false" : "true" )" class="@(!isSearch ? " collapsed" : null)">

        <div class="card-header">
            <h3 class="card-title">
                <i class="fas fa-search"></i>
                <span style="margin-right: 5px">@Language.GetString("btn_Search")</span>
            </h3>
        </div>
    </a>

    <div id="changePassCollapse" class="@userSearchCollapseClass" style="">
        <div class="card-body">
            <div id="accordion">
                <div class="row">

                    <div class="form-group col-md-3">
                        <label>@Language.GetString("User_UserName")</label>
                        <input id="userName" value="@(queryString != null ? @queryString["userName"] : "")" type="text" class="form-control" />
                    </div>


                    <div class="form-group col-md-3">
                        <label>@Language.GetString("User_FullName")</label>
                        <input id="name" value="@(queryString != null ? @queryString["name"] : "")" type="text" class="form-control" />
                    </div>
                    <div class="form-group col-md-3">
                        <label>@Language.GetString("Role")</label>
                        <select style="font-size: 14px;" id="roleSelect" class="form-control">
                            <option value="0" selected="@(queryString != null && string.IsNullOrWhiteSpace(queryString["role"]) ? "selected" : null)">@Language.GetString("AlertAndMessage_SelectOne")</option>
                            @{
                                List<RoleListView> roles = ViewBag.Roles;

                                foreach (var role in roles)
                                {
                                    <option selected="@(queryString != null && !string.IsNullOrWhiteSpace(queryString["role"])
                                        && queryString["role"] == role.Id ? "selected" : null)"
                                            value="@role.Id">
                                        @role.Title
                                    </option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>

        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col-md-3">
                    <button id="btnLoad" class="btn btn-primary" type="submit">@Language.GetString("btn_Find")</button>
                </div>
            </div>
            
        </div>
    </div>
</div>


<div class="card">
    <div class="card-header" style='background-color: #F8EDED;'>
        <h3 class="card-title">@Language.GetString("PermissionTitle_UserManagement")</h3>
        <div class="card-tools" style='@(dir=="rtl" ? "float:left;" : "float:right;")'>
            @if (ViewBag.Permissions["Add"])
            {
                <a asp-action="Add" asp-controller="Account" class="btn btn-success btn-sm">
                    <i style="position: relative; left: 5px; top: 2px;" class="fa fa-plus"></i>&nbsp; @Language.GetString("btn_Add")
                </a>
            }
        </div>
    </div>
    <div class="card-body" id="userListCard">
        <table id="userListTbl" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th class="userListCell">@Language.GetString("tbl_RowName")</th>
                    <th class="userListCell">@Language.GetString("User_UserName")</th>
                    <th class="userListCell">@Language.GetString("User_FullName")</th>
                    <th class="userListCell">@Language.GetString("User_RoleName")</th>
                    <th class="userListCell">@Language.GetString("CreationDate")</th>
                    <th class="userListCell">@Language.GetString("User_PhoneNumber")</th>
                    <th class="userListCell">@Language.GetString("ActivationState")</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="table">
                @if (Model.Items.Count != 0)
                {
                    @foreach (var item in Model.Items)
                    {
                <tr>
                    <td class="userListCell">@(++i)</td>
                    <td class="userListCell">@item.UserName</td>
                    <td class="userListCell">@($"{@item.Name} {@item.LastName}")</td>
                    <td class="userListCell">@item.RoleName</td>
                    <td class="userListCell">@item.CreateDate</td>
                    <td class="userListCell">@item.PhoneNumber</td>
                    <td id="@("activation" + item.Id)" class="userListCell">
                        @{
                            if (item.IsActive)
                            {
                                <button onclick='changeActivation("@item.Id")' class="btn-sm btn btn-success">@Language.GetString("Active")</button>
                            }
                            else
                            {
                                <button onclick='changeActivation("@item.Id")' class="btn-sm btn btn-danger">@Language.GetString("InActive")</button>
                            }
                        }
                    </td>
                    <td class="userListCell">
                        @if (ViewBag.Permissions["Edit"])
                        {
                            <a id="editRecord" asp-action="EditUser" asp-controller="Account" asp-route-id="@item.Id" class="btn btn-sm btn-info">
                                @Language.GetString("btn_Edit")
                            </a>
                        }
                       
                      
                        @if (ViewBag.Permissions["Remove"] && item.IsDelete)
                        {
                            <button id="restoreRecord" data-id="@item.Id" onclick="restoreUser('@item.Id')" class="btn btn-sm btn-warning">
                                @Language.GetString("btn_Restore")
                            </button>
                        }
                    </td>
                </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="userListCell">
                            <h6>@Language.GetString("AlertAndMessage_NoDataToShow")</h6>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
    <div class="card-footer">
        @await Component.InvokeAsync("Pagination", new PageViewModel
   {
       CurrentPage = Model.CurrentPage,
       ItemsCount = Model.ItemsCount,
       PageSize = Model.PageSize,
       Navigation = Url.Action("List", "User"),
       QueryParams = Model.QueryString ?? "page=1&pageSize=20"
   })
    </div>
</div>

@section Scripts
    {
    <script>
        $(document).ready(function () {
            debugger;
             $("#btnLoad").click(function () {
            debugger;
                var queryString = '';
                if ($("#name").val() !== '') {
                    queryString = '?name=' + $("#name").val();
                }

                if ($("#userName").val() !== '') {
                    if (queryString === '') {
                        queryString = '?userName=' + $("#userName").val();
                    } else {
                        queryString = queryString + '&userName=' + $("#userName").val();
                    }
                }

                var role = $('#roleSelect').find(":selected").val();
                if (role !== '0') {
                    if (queryString === '') {
                        queryString = '?role=' + role;
                    } else {
                        queryString = queryString + '&role=' + role;
                    }
                }

                window.location.href = '@Url.Action("List", "Account")' + queryString;
            });
        });


            //function ViewImage(address) {
            //    var tag = '<img src="' + address + '" width="500px" />';
            //    Swal.fire({
            //        html: tag,
            //        width: 'auto',
            //        showConfirmButton: true,
            //        confirmButtonText: 'بستن'
            //    });
            //}

        function changeActivation(id) {
            debugger;
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("ChangeActivation", "Account")' + '?id=' + id,
                    success: function(resultData) {
                        if (resultData.status === "success") {
                            debugger;
                            var html = '';
                            if (resultData.result === true) {
                                html = '<button onclick="changeActivation(\'' + id + '\')" class="btn btn-sm btn-success"> ' + '@Language.GetString("Active")' +' </button>';
                            } else {
                                html = '<button onclick="changeActivation(\'' + id + '\')" class="btn btn-sm btn-danger"> '+ '@Language.GetString("InActive")' +' </button>';
                            }
                            $('#activation' + id).html(html);
                        }

                        if (resultData.status === "error") {
                            Swal.fire({
                                icon: 'error',
                                text: resultData.message,
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    }
                });
            }

        function deleteUser(id) {
            debugger;
                Swal.fire({
                    title: '@Language.GetString("AlertAndMessage_AreYouSure")',
                    text: '@Language.GetString("AlertAndMessage_UserDeleteText")',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d51c1c',
                    cancelButtonColor: '#009c09db',
                    confirmButtonText: '@Language.GetString("btn_Confirm")',
                    cancelButtonText: '@Language.GetString("btn_NotConfirm")'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'Get',
                            url: '@Url.Action("Delete", "Account")' + '?id=' + id,
                            success: function(resultData) {
                                if (resultData.status === "success") {
                                    debugger;
                                    Swal.fire({
                                        icon: 'success',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 1500
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                }

                                if (resultData.status === "error") {
                                    debugger;
                                    Swal.fire({
                                        icon: 'error',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 1500
                                    });
                                }
                            }
                        });
                    }
                });
        }
        function restoreUser(id) {
            debugger;
                Swal.fire({
                    title: '@Language.GetString("AlertAndMessage_AreYouSure")',
                    text: '@Language.GetString("AlertAndMessage_UserRestoreText")',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d51c1c',
                    cancelButtonColor: '#009c09db',
                    confirmButtonText: '@Language.GetString("btn_Confirm")',
                    cancelButtonText: '@Language.GetString("btn_NotConfirm")'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'Get',
                            url: '@Url.Action("Restore", "Account")' + '?id=' + id,
                            success: function(resultData) {
                                if (resultData.status === "success") {
                                    Swal.fire({
                                        icon: 'success',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 1500
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                }

                                if (resultData.status === "error") {
                                    Swal.fire({
                                        icon: 'error',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 1500
                                    });
                                }
                            }
                        });
                    }
                });
            }

            function changePassword(id) {
                debugger;
                Swal.fire({
                    title: '@Language.GetString("btn_ChangePass")',
                    text: "@Language.GetString("AlertAndMessage_ChangePassSureness")",
                    icon: 'warning',
                    showDenyButton: true,
                    denyButtonText: '@Language.GetString("btn_NotConfirm")',
                    denyButtonColor: '#ff8100',
                    showCancelButton: true,
                    confirmButtonColor: '#009c09db',
                    cancelButtonColor: '#d51c1c',
                    confirmButtonText: '@Language.GetString("btn_Confirm")',
                    cancelButtonText: '@Language.GetString("btn_Cancel")'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'Get',
                            url: '@Url.Action("ChangePassword", "Account")' + '?id=' + id,
                            success: function(resultData) {
                                if (resultData.status === "success") {
                                    Swal.fire({
                                        icon: 'success',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 3000
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                }

                                if (resultData.status === "error") {
                                    Swal.fire({
                                        icon: 'error',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 3000
                                    });
                                }
                            }
                        });
                    }
                });
            }
    </script>
}





