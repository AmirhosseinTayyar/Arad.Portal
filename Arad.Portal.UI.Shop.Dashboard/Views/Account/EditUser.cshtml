@model Arad.Portal.DataLayer.Models.User.UserEdit

@{
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");
    var dir = "";
    if (CultureInfo.CurrentCulture.TextInfo.IsRightToLeft)
    {
        dir = "rtl";
    }
    else
    {
        dir = "ltr";
    }
}
<link href="~/lib/intl-tel-input/css/intlTelInput.css" rel="stylesheet" />

<div class="row">
    <div class="col-md-10 offset-md1">
        <div class="card card-primary" id="editUserCard">
            <div class="card-header">
                <h3 class="card-title">@Language.GetString("User_Edit")</h3>
            </div>
            <form id="editUserFrm" asp-action="Edit" asp-controller="Account" method="post">
                <div class="card-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    @*<div class="form-group">
                            <label asp-for="UserName" class="control-label"></label>
                            <input asp-for="UserName" class="form-control" />

                            <span data-val-result="UserName" class="text-danger"></span>
                        </div>*@
                    <div class="form-group">
                        <input asp-for="Id" type="hidden" class="form-control" />
                        <label asp-for="PhoneNumber" class="control-label"></label>
                        <input asp-for="PhoneNumber" type="tel" class="form-control" style="direction:ltr;" />
                        @*<input id="hidePhone" type="hidden" value="" name="FullMobile" />*@
                        <span data-val-result="PhoneNumber" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="FirstName" class="control-label"></label>
                        <input asp-for="FirstName" class="form-control" />
                        <span data-val-result="UserProfile.FirstName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="LastName" class="control-label"></label>
                        <input asp-for="LastName" class="form-control" />
                        <span data-val-result="UserProfile.LastName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="UserRoleId" class="control-label"></label>
                        <select class="form-control select2" asp-for="UserRoleId" asp-items="@(new SelectList(ViewBag.Roles,"Id","Title"))">
                        </select>
                        <span data-val-result="UserRoleId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @if (dir == "rtl")
                        {
                            <label>
                                <input type="checkbox" asp-for="IsVendor" class="minimal">
                                @Language.GetString("IsVendor")
                            </label>
                        }
                        else
                        {
                            <div class="icheck-primary d-inline">
                                <input type="checkbox" asp-for="IsVendor">
                                <label asp-for="IsVendor">
                                    @Language.GetString("IsVendor")
                                </label>
                            </div>
                        }

                    </div>
                </div>
                <div class="card-footer">
                    <div class="form-group">
                        <input type="submit" value="@Language.GetString("btn_Edit")" class="btn btn-block btn-success" />
                        <a asp-action="List" class="btn btn-block btn-default">@Language.GetString("btn_Back")</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/lib/twbs-pagination/jquery.twbsPagination.js"></script>
    <script src="~/lib/intl-tel-input/js/intlTelInput-jquery.min.js"></script>
    <script src="~/lib/intl-tel-input/js/intlTelInput.js"></script>
    <script src="~/lib/MD.BootstrapPersianDateTimePicker/dist/jquery.md.bootstrap.datetimepicker.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
        var input = document.querySelector("#PhoneNumber");
            debugger;
        window.intlTelInput(input,
            {
                initialCountry: "IR",
                placeholderNumberType: "MOBILE",
                separateDialCode: true,
                utilsScript: "../../lib/intl-tel-input/js/utils.js",
                nationalMode: true,
                hiddenInput: "FullMobile"
            });


            $("#editUserFrm").submit(function (e) {
                debugger;
             e.preventDefault();
             var frm = document.getElementById('editUserFrm');
             var form = new FormData(frm);
             /*form.append("FullMobile", $("#hidePhone").val());*/

             $.ajax({
                 url: $(this).attr('action'),
                 data: form,
                 type: 'Post',
                 processData: false,
                 contentType: false,
                 beforeSend: function () {
                     AddLoading($("#editUserCard"));
                 },
        success: function (result) {
            debugger;
            var spanErrorList = $('#edit span[data-val-result]');
            spanErrorList.html("");
            spanErrorList.parent().removeClass("has-error");
            if (result.status === "success") {
                Swal.fire({
                        icon: 'success',
                        text: result.message,
                        confirmButtonText:
                        '<i class="fa fa-thumbs-up"></i> @alert',
                        });
            } else if (result.status === "error") {

                if (spanErrorList.length > 1) {
                    spanErrorList.each(function() {
                        $(this).html("");
                        $(this).parent().removeClass("has-error");
                    });
                }

                if (result.modelStateErrors !== null) {

                    result.modelStateErrors.forEach(function(value, index) {

                        $("#edit").find('[data-val-result=' + value.key + ']')
                            .html(value.errorMessage);
                        $("#edit").find('[data-val-result=' + value.key + ']').parent()
                            .addClass("has-error");
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        text: result.message,
                        confirmButtonText:
                            '<i class="fa fa-thumbs-up"></i> @alert',
                    });
                }
            }
        },
        error: function (xhr, ajaxoptions, thrownerror) {
            alert("@error");
            alert(xhr.status);
            alert(thrownerror);
        },
        complete: function() {
            removeLoading($("#editUserCard"));
        }
    });
});
    });
    </script>
}
