@using System.Web
@using Arad.Portal.DataLayer.Models.Shared;
@using Arad.Portal.GeneralLibrary.Utilities;
@using Arad.Portal.DataLayer.Models.ProductGroup;
@using Arad.Portal.UI.Shop.Dashboard.ViewComponents;

@model PagedItems<ProductGroupViewModel>
@{
    var i = ((Model.CurrentPage - 1) * Model.PageSize);
    bool isSearch = false;
    System.Collections.Specialized.NameValueCollection queryString = null;
    var langId = "";
    if (!string.IsNullOrWhiteSpace(Model.QueryString))
    {
        queryString = System.Web.HttpUtility.ParseQueryString(Model.QueryString);
        isSearch = !string.IsNullOrWhiteSpace(queryString["LanguageId"]);
        if(isSearch)
        {
            langId = queryString["LanguageId"].ToString();
        }
        queryString.Remove("page");
    }
    else
    {
        langId = ViewBag.DefLangId;
    }
    var searchCollapseClass = isSearch ? "panel-collapse in collapse show" : "panel-collapse in collapse";
    var dir = "";
    if (CultureInfo.CurrentCulture.TextInfo.IsRightToLeft)
    {
        dir = "rtl";
    }
    else
    {
        dir = "ltr";
    }
}
@section Styles
{
    <style>
        .userListCell {
            text-align: center;
            vertical-align: middle;
        }
    </style>
}

<div class="card card-dark">
    <a data-toggle="collapse" data-parent="#accordion" href="#searchCollapse" aria-expanded="@(!isSearch ? "false" : "true" )" class="@(!isSearch ? " collapsed" : null)">

        <div class="card-header">
            <h3 class="card-title">
                <i class="fas fa-search"></i>
                <span style="margin-right: 5px">@Language.GetString("btn_Search")</span>
            </h3>
        </div>
    </a>

    <div id="searchCollapse" @*class="@searchCollapseClass"*@ style="">
        <div class="card-body">
            <div id="accordion">
                <div class="row">

                    <div class="form-group col-md-3">
                        <label>@Language.GetString("LanguageName")</label>
                        <select class="form-control select2" id="cmbLangIdFilter" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))">
                        </select>
                    </div>
                </div>
            </div>

        </div>
        @*<div class="card-footer">
            <div class="row">
                <div class="col-md-3">
                    <button id="btnLoad" class="btn btn-primary" type="button">@Language.GetString("btn_Find")</button>
                </div>
            </div>
        </div>*@
    </div>
</div>
<div class="card">
    <div class="card-header">
        <h3 class="card-title">@Language.GetString("Menu_ProductGroups")</h3>
        <div class="card-tools" style='@(dir=="rtl" ? "float:left;" : "float:right;")'>
            @if (ViewBag.Permissions["Add"])
            {
                <a asp-action="AddEdit" asp-controller="ProductGroup"  class="btn btn-success btn-sm">
                    <i style="position: relative; left: 5px; top: 2px;" class="fa fa-plus"></i>&nbsp; @Language.GetString("btn_Add")
                </a>
            }
        </div>
    </div>
    <div class="card-body table-bordered  table-responsive p-0" id="productGroupListCard">
        <table class="table table-hover">
            <thead>
                <tr style="text-align:center;">
                    <th>@Language.GetString("tbl_RowName")</th>
                    <th>@Language.GetString("tbl_GroupName")</th>
                    <th>@Language.GetString("SeoDescription")</th>
                    <th>@Language.GetString("Description")</th>
                    <th>@Language.GetString("SeoTitle")</th>
                    <th>@Language.GetString("UrlFriend")</th>
                    <th>@Language.GetString("RelatedLanguage")</th>
                    <th>@Language.GetString("Currency")</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items.Any())
                {

                    @foreach (var item in Model.Items)
                    {
                <tr>
                    <td class="userListCell">@(++i)</td>
                    <td class="userListCell">@item.MultiLingualProperty.Name</td>
                    <td class="userListCell">@item.MultiLingualProperty.SeoDescription</td>
                    <td class="userListCell">@item.MultiLingualProperty.Description</td>
                    <td class="userListCell">@item.MultiLingualProperty.SeoTitle</td>
                    <td class="userListCell">@item.MultiLingualProperty.UrlFriend</td>
                    <td class="userListCell">@item.MultiLingualProperty.LanguageName</td>
                    <td class="userListCell">@item.MultiLingualProperty.CurrencyName</td>
                    <td>
                        @if (ViewBag.Permissions["Edit"])
                        {
                            <a asp-action="AddEdit" asp-controller="ProductGroup" asp-route-id="@item.ProductGroupId"
                               asp-route-langId="@item.MultiLingualProperty.LanguageId" class="btn btn-sm btn-info">
                                <i style="position: relative;left: 5px;top: 2px;" class="fa fa-edit"></i>@Language.GetString("btn_Edit")
                            </a>
                        }
                        @if (ViewBag.Permissions["Remove"])
                        {
                            <button onclick="EntityDelete('@item.ProductGroupId')" class="btn btn-sm btn-danger">
                                <i style="position: relative; left: 5px; top: 1px;" class="fa fa-trash"></i>@Language.GetString("btn_Delete")
                            </button>
                        }
                        @if (ViewBag.Permissions["Remove"] && item.IsDeleted)
                        {
                            <button id="restoreRecord" data-id="@item.ProductGroupId" onclick="EntityRestore('@item.ProductGroupId')" class="btn btn-sm btn-warning">
                                <i style="position: relative;left: 5px;top: 2px;" class="fa fa-refresh"></i>
                                @Language.GetString("btn_Restore")
                            </button>
                        }
                    </td>
                </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="9" class="userListCell">
                            <h6>@Language.GetString("AlertAndMessage_NoDataToShow")</h6>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="card-footer">
        @await Component.InvokeAsync("Pagination", new PageViewModel
      {
          CurrentPage = Model.CurrentPage,
          ItemsCount = Model.ItemsCount,
          PageSize = Model.PageSize,
          Navigation = Url.Action("List", "ProductUnit"),
          QueryParams = Model.QueryString
      })
    </div>

</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            debugger;
            if ("@langId" != "") {
                $("#cmbLangIdFilter").val("@langId");
            }

           $("#cmbLangIdFilter").change(function () {
            debugger;
               var queryString = '?LanguageId=' + $("#cmbLangIdFilter").val();
               window.location.href = '@Url.Action("List", "ProductGroup")' + queryString;
            });
        });
        function EntityDelete(id) {
            debugger;
        Swal.fire({
            title: '@Language.GetString("AlertAndMessage_AreYouSure")',
            text: '@Language.GetString("AlertAndMessage_DeleteProductUnit")',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d51c1c',
            cancelButtonColor: '#009c09db',
            confirmButtonText: '@Language.GetString("btn_Confirm")',
            cancelButtonText: '@Language.GetString("btn_NotConfirm")'
            }).then((result) => {
                if (result.isConfirmed) {
                    debugger;
            $.ajax({
                type: 'Get',
                url: '@Url.Action("Delete", "ProductGroup")' + "/" + id,
            beforeSend: function() {
                AddLoading($("#productGroupListCard"));
            },
                success: function (resultData) {
                    debugger;
                removeLoading($("productGroupListCard"))
            if (resultData.status === "Success") {
            Swal.fire({
            icon: 'success',
            text: resultData.message,
            showConfirmButton: false,
            timer: 3000
            }).then(() => {
            window.location.reload();
            });
            }

            if (resultData.status === "Error") {
            Swal.fire({
            icon: 'error',
            text: resultData.message,
            showConfirmButton: false,
            timer: 1500
            });
            }
            }
            });
            }
            });
        }

        function ProductUnitRestore(id) {
            debugger;
                Swal.fire({
                    title: '@Language.GetString("AlertAndMessage_AreYouSure")',
                    text: '@Language.GetString("AlertAndMessage_EntityRestoreText")',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d51c1c',
                    cancelButtonColor: '#009c09db',
                    confirmButtonText: '@Language.GetString("btn_Confirm")',
                    cancelButtonText: '@Language.GetString("btn_NotConfirm")'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'Get',
                            url:  '@Url.Action("Restore", "ProductUnit")' + '?id=' + id,
                            success: function(resultData) {
                                if (resultData.status === "success") {
                                    Swal.fire({
                                        icon: 'success',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 2000
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                }
                                if (resultData.status === "error") {
                                    Swal.fire({
                                        icon: 'error',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 2000
                                    });
                                }
                            }
                        });
                    }
                });
            }
    </script>
}
