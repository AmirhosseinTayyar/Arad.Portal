@using System.Web
@using Arad.Portal.DataLayer.Models.Shared;
@using Arad.Portal.GeneralLibrary.Utilities;
@using Arad.Portal.DataLayer.Models.Comment;
@using Arad.Portal.UI.Shop.Dashboard.ViewComponents;

@model PagedItems<CommentViewModel>
@{
    var i = ((Model.CurrentPage - 1) * Model.PageSize);
    bool isSearch = false;
    System.Collections.Specialized.NameValueCollection queryString = null;
    var langId = "";
    if (!string.IsNullOrWhiteSpace(Model.QueryString))
    {
        queryString = System.Web.HttpUtility.ParseQueryString(Model.QueryString);
        queryString.Remove("page");
    }
    else
    {
        langId = ViewBag.DefLangId;
    }
    var searchCollapseClass = isSearch ? "panel-collapse in collapse show" : "panel-collapse in collapse";
    var dir = "";
    if (CultureInfo.CurrentCulture.TextInfo.IsRightToLeft)
    {
        dir = "rtl";
    }
    else
    {
        dir = "ltr";
    }
}
@section Styles
{
    <style>
        .ListCell {
            text-align: center;
            vertical-align: middle;
        }
    </style>
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <link href="~/plugins/datePicker/kamadatepicker.css" rel="stylesheet" />
    }
}

<div class="card card-dark">
    <a data-toggle="collapse" data-parent="#accordion" href="#searchCollapse" aria-expanded="@(!isSearch ? "false" : "true" )" class="@(!isSearch ? " collapsed" : null)">

        <div class="card-header">
            <h3 class="card-title">
                <i class="fas fa-search"></i>
                <span style="margin-right: 5px">@Language.GetString("btn_Search")</span>
            </h3>
        </div>
    </a>

    <div id="searchCollapse" @*class="@searchCollapseClass"*@ style="">
        <div class="card-body">
            <div id="accordion">
                <div class="row">
                    <div class="form-group col-md-3">
                        <label>@Language.GetString("StartDate")</label>
                        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                        {
                            <div class="input-group-prepend ">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <input autocomplete="off" id="dtpStartDate" type="text" class="form-control" />
                            </div>
                        }
                        else
                        {
                            <div class="input-group date" id="dtpStartDate" data-target-input="nearest">
                                <input type="text" class="form-control datetimepicker-input" />
                                <div class="input-group-append" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="form-group col-md-3">
                        <label>@Language.GetString("EndDate")</label>
                        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                        {
                            <div class="input-group-prepend ">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <input autocomplete="off" id="dtpEndDate" type="text" class="form-control" />
                            </div>
                        }
                        else
                        {
                            <div class="input-group date" id="dtpEndDate" data-target-input="nearest">
                                <input type="text" class="form-control datetimepicker-input" />
                                <div class="input-group-append" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button id="btnSearch" class="btn btn-primary" type="button">
                <i style="position: relative; left: 5px; top: 1px;" class="fa fa-search"></i>
                @Language.GetString("btn_Search")
            </button>
        </div>
    </div>
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">@ViewBag.Title</h3>
            <div class="card-tools" style='@(dir=="rtl" ? "float:left;" : "float:right;")'>
                @*@if (ViewBag.Permissions["Add"])
                {
                    <a asp-action="AddEdit" asp-controller="" class="btn btn-success btn-sm">
                        <i style="position: relative; left: 5px; top: 2px;" class="fa fa-plus"></i>&nbsp; @Language.GetString("btn_Add")
                    </a>
                }*@
            </div>
        </div>
        <div class="card-body table-bordered  table-responsive p-0" id="CommentListCard">
            <table class="table table-hover">
                <thead>
                    <tr style="text-align:center;">
                        <th>@Language.GetString("tbl_RowName")</th>
                        <th>@Language.GetString("ReferenceType")</th>
                        <th>@Language.GetString("ReferenceTitle")</th>
                        <th>@Language.GetString("CreationDate")</th>
                        <th>@Language.GetString("Role_CreatorUserName")</th>
                        <th>@Language.GetString("LikeCount")</th>
                        <th>@Language.GetString("DisLikeCount")</th>
                        <th>@Language.GetString("Menu_Content")</th>
                        <th>@Language.GetString("ParentComment")</th>
                        <th>@Language.GetString("IsApproved")</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Items.Any())
                    {

                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td class="ListCell">@(++i)</td>
                                <td class="ListCell">@item.ReferenceType</td>
                                <td class="ListCell">@item.ReferenceTitle</td>
                                <td class="ListCell">@item.PersianCreationDate</td>
                                <td class="ListCell">@item.CreatorUserName</td>
                                <td class="ListCell">@item.LikeCount</td>
                                <td class="ListCell">@item.DislikeCount</td>
                                <td class="ListCell">@item.Content</td>
                                <td class="ListCell">@item.ParentCommentContent</td>
                                <td class="ListCell">
                                    @if (dir == "rtl")
                                    {
                                        <input type="radio" name="isMainImage" checked="@item.IsApproved" class="minimal rdbIsMain">
                                    }
                                    else
                                    {
                                        <div class="icheck-primary d-inline">
                                            <input type="radio" checked="@item.IsApproved" name="isMainImage" class="rdbIsMain">
                                        </div>
                                    }
                                </td>
                                <td>
                                    @if (ViewBag.Permissions["Edit"])
                                    {
                                        <a asp-action="ApproveComment" asp-controller="Comment" asp-route-id="@item.CommentId" class="btn btn-sm btn-info">
                                            <i style="position: relative;left: 5px;top: 2px;" class="fa fa-edit"></i>@Language.GetString("btn_Approved")
                                        </a>
                                    }
                                    @if (ViewBag.Permissions["Remove"] && !item.IsDeleted)
                                    {
                                        <button onclick="EntityDelete('@item.CommentId')" class="btn btn-sm btn-danger">
                                            <i style="position: relative; left: 5px; top: 1px;" class="fa fa-trash"></i>@Language.GetString("btn_Delete")
                                        </button>
                                    }
                                    @if (ViewBag.Permissions["Remove"] && item.IsDeleted)
                                    {
                                        <button id="restoreRecord"  onclick="EntityRestore('@item.CommentId')" class="btn btn-sm btn-warning">
                                            <i style="position: relative;left: 5px;top: 2px;" class="fa fa-refresh"></i>
                                            @Language.GetString("btn_Restore")
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11" class="ListCell">
                                <h6>@Language.GetString("AlertAndMessage_NoDataToShow")</h6>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer">
            @await Component.InvokeAsync("Pagination", new PageViewModel
            {
                CurrentPage = Model.CurrentPage,
                ItemsCount = Model.ItemsCount,
                PageSize = Model.PageSize,
                Navigation = Url.Action("List", "Comment"),
                QueryParams = Model.QueryString
            })
        </div>

    </div>
    @section Scripts{
        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
        {
            <script src="~/plugins/datePicker/kamadatepicker.min.js"></script>
        }
        else
        {
            <script src="~/js/moment.min.js"></script>
            <script src="~/js/siteTemplate/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.min.js"></script>
        }
        <script>
        $(document).ready(function () {
            debugger;
            

            $("#btnSearch").click(function () {
                debugger;
                var queryString = "";
                if ($("#dtpStartDate").val() != "") {
                    queryString = "?fDate=" + $("#dtpStartDate").val();
                }
                if ($("#dtpEndDate").val() != "") {
                    if (queryString != "") {
                        queryString += "&tDate=" + $("#dtpEndDate").val();
                    }
                    else
                    {
                        queryString = "?tDate=" + $("#dtpEndDate").val();
                    }
                }
               window.location.href = '@Url.Action("List", "Comment")' + queryString;
            });
        });
        function EntityDelete(id) {
            debugger;
        Swal.fire({
            title: '@Language.GetString("AlertAndMessage_AreYouSure")',
            text: '@Language.GetString("AlertAndMessage_DeleteProductGroup")',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d51c1c',
            cancelButtonColor: '#009c09db',
            confirmButtonText: '@Language.GetString("btn_Confirm")',
            cancelButtonText: '@Language.GetString("btn_NotConfirm")'
            }).then((result) => {
                if (result.isConfirmed) {
                    debugger;
            $.ajax({
                type: 'Get',
                url: '@Url.Action("Delete", "Comment")' + "/" + id,
            beforeSend: function() {
                AddLoading($("#CommentListCard"));
            },
                success: function (resultData) {
                    debugger;
                    removeLoading($("CommentListCard"))
            if (resultData.status === "Success") {
            Swal.fire({
            icon: 'success',
            text: resultData.message,
            showConfirmButton: false,
            timer: 3000
            }).then(() => {
            window.location.reload();
            });
            }

            if (resultData.status === "Error") {
            Swal.fire({
            icon: 'error',
            text: resultData.message,
            showConfirmButton: false,
            timer: 1500
            });
            }
            }
            });
            }
            });
        }

        function EntityRestore(id) {
            debugger;
                Swal.fire({
                    title: '@Language.GetString("AlertAndMessage_AreYouSure")',
                    text: '@Language.GetString("AlertAndMessage_EntityRestoreText")',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d51c1c',
                    cancelButtonColor: '#009c09db',
                    confirmButtonText: '@Language.GetString("btn_Confirm")',
                    cancelButtonText: '@Language.GetString("btn_NotConfirm")'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'Get',
                            url:  '@Url.Action("Restore", "Comment")' + '?id=' + id,
                            success: function(resultData) {
                                if (resultData.status === "success") {
                                    Swal.fire({
                                        icon: 'success',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 2000
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                }
                                if (resultData.status === "error") {
                                    Swal.fire({
                                        icon: 'error',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 2000
                                    });
                                }
                            }
                        });
                    }
                });
            }
        </script>
    }
