@using System.Web
@using Arad.Portal.GeneralLibrary.Utilities;
@using Arad.Portal.DataLayer.Models.Product
@using Arad.Portal.UI.Shop.Dashboard.ViewComponents;
@model PagedItems<ProductViewModel>
@{
    var i = ((Model.CurrentPage - 1) * Model.PageSize);
    bool isSearch = false;
    System.Collections.Specialized.NameValueCollection queryString = null;
    var langId = "";
    if (!string.IsNullOrWhiteSpace(Model.QueryString))
    {
        queryString = System.Web.HttpUtility.ParseQueryString(Model.QueryString);
        isSearch = !string.IsNullOrWhiteSpace(queryString["LanguageId"]);
        if (isSearch)
        {
            langId = queryString["LanguageId"].ToString();
        }
        queryString.Remove("page");
    }
    else
    {
        langId = ViewBag.DefLangId;
    }
    var searchCollapseClass = isSearch ? "collapse show" : "collapse";
    var dir = "";
    if (CultureInfo.CurrentCulture.TextInfo.IsRightToLeft)
    {
        dir = "rtl";
    }
    else
    {
        dir = "ltr";
    }
}
@section Styles
{
    <style>

        .contentDiv {
            margin: auto;
        }
    </style>
    <link href="~/plugins/select2/css/select2.css" rel="stylesheet" />
    <link href="~/plugins/select2-bootstrap4-theme/select2-bootstrap4.css" rel="stylesheet" />
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <link href="~/plugins/datePicker/kamadatepicker.css" rel="stylesheet" />
    }
}

<div class="card card-dark">
    <a data-bs-toggle="collapse" role="button" href="#searchCollapse"
       aria-expanded="@(!isSearch ? "false" : "true" )" class="@(!isSearch ? " collapsed" : null)">

        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-search">
                    <span>@Language.GetString("btn_Search")</span>
                </i>
            </h5>
        </div>
    </a>

    <div id="searchCollapse" class="@searchCollapseClass">
        <div class="card-body">

            <div class="row">
                <div class="form-group col-md-3">
                    <label>@Language.GetString("tbl_ProductGroup")</label>
                    <select class="form-control select2" multiple="multiple" id="cmbProductGroupFilter" asp-items="@(new SelectList(ViewBag.ProductGroupList,"Value","Text"))">
                    </select>
                </div>
                <div class="form-group col-md-3">
                    <label>@Language.GetString("tbl_ProductName")</label>
                    <input type="text" class="form-control" id="txtProductNameFilter" />
                </div>
                <div class="form-group col-md-2">
                    <label>@Language.GetString("tbl_UniqeCode")</label>
                    <input type="text" class="form-control" id="txtUniqueCodeFilter" />
                </div>
                <div class="form-group col-md-4">
                    <label>@Language.GetString("Description")</label>
                    <input type="text" class="form-control" id="txtDescriptionFilter" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-3">
                    <label>@Language.GetString("fromCreationDate")</label>
                    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                    {
                        <div class="input-group-prepend ">
                            <span class="input-group-text">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <input autocomplete="off" id="dtpFomCreationDate" type="text" class="form-control" />
                        </div>
                    }
                    else
                    {
                        <div class="input-group date" id="dtpFromCreationDate" data-target-input="nearest">
                            <input type="text" class="form-control datetimepicker-input" />
                            <div class="input-group-append" data-toggle="datetimepicker">
                                <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                            </div>
                        </div>
                    }

                </div>
                <div class="form-group col-md-3">
                    <label>@Language.GetString("toCreationDate")</label>
                    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                    {
                        <div class="input-group-prepend ">
                            <span class="input-group-text">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <input autocomplete="off" id="dtpToCreationDate" type="text" class="form-control" />
                        </div>
                    }
                    else
                    {
                        <div class="input-group date" id="dtpToCreationDate" data-target-input="nearest">
                            <input type="text" class="form-control datetimepicker-input" />
                            <div class="input-group-append" data-toggle="datetimepicker">
                                <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                            </div>
                        </div>
                    }

                </div>
                <div class="form-group col-md-2">
                    <label>@Language.GetString("ProductInventoryLessThan")</label>
                    <input type="number" id="txtLeastProduct" class="form-control" min="0" />
                </div>

            </div>
            <div class="row">

                <div class="form-group col-md-3 contentDiv">
                    @if (dir == "rtl")
                    {
                        <label>
                            <input type="checkbox" id="chbExistentProducts" class="minimal">
                            @Language.GetString("ExistentProducts")
                        </label>
                    }
                    else
                    {
                        <div class="icheck-primary d-inline">
                            <input type="checkbox" id="chbExistentProducts">
                            <label for="chbExistentProducts">
                                @Language.GetString("ExistentProducts")
                            </label>
                        </div>
                    }
                </div>
                <div class="form-group col-md-3 contentDiv">
                    @if (dir == "rtl")
                    {
                        <label>
                            <input type="checkbox" id="chbProductsOnPromotion" class="minimal">
                            @Language.GetString("ProductsOnPromotion")
                        </label>
                    }
                    else
                    {
                        <div class="icheck-primary d-inline">
                            <input type="checkbox" id="chbProductsOnPromotion">
                            <label for="chbProductsOnPromotion">
                                @Language.GetString("ProductsOnPromotion")
                            </label>
                        </div>
                    }
                </div>

                <div class="col-md-6"></div>
            </div>

        </div>
        <div class="card-footer">
            <button id="btnSearch" class="btn btn-primary bg-gradient" type="submit">
                <i style="position: relative; left: 5px; top: 1px;" class="fa fa-search"></i>
                @Language.GetString("btn_Search")
            </button>
        </div>
    </div>
</div>
<div class="card" id="productListCard">
    <div class="card-header">
        <div class="row">
            <div class="col-md-3">
                <h5 class="card-title">@Language.GetString("Menu_Products")</h5>
            </div>
            <div class="col-md-3 offset-md-6">
                <div class="card-tools float-end">
                    @if (ViewBag.Permissions["Add"])
                    {
                        <a asp-action="ImportFromExcel" asp-controller="Product" class="btn btn-success btn-sm bg-gradient">
                            <i style="position: relative; left: 5px; top: 2px;" class="fa fa-file-excel"></i>&nbsp; @Language.GetString("btn_ExcelImport")
                        </a>

                        <a asp-action="AddEdit" asp-controller="Product" class="btn btn-success btn-sm bg-gradient">
                            <i style="position: relative; left: 5px; top: 2px;" class="fa fa-plus"></i>&nbsp; @Language.GetString("btn_Add")
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="card-body table-bordered  p-0">
        <div class="row" style="background-color: #cbcdce;">
            <div class="col-md-1 offset-md-1">
                <span class="form-control" style="background-color: #f4f4f5;">@Language.GetString("LanguageName")</span>
            </div>
            <div class="col-md-2">
                <select class="form-control" id="cmbLangIdFilter" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))">
                </select>
            </div>
        </div>
        <div class="card-body table-responsive">
            <table class="table table-bordered table-striped align-middle">
                <thead>
                    <tr style="text-align:center;">
                        <th>@Language.GetString("tbl_RowName")</th>
                        <th>@Language.GetString("tbl_MainImage")</th>
                        <th>@Language.GetString("tbl_ProductName")</th>
                        <th>@Language.GetString("tbl_ProductUnit")</th>
                        <th>@Language.GetString("tbl_GroupNames")</th>
                        <th>@Language.GetString("tbl_UniqeCode")</th>
                        <th>@Language.GetString("tbl_Inventory")</th>
                        <th>@Language.GetString("tbl_Price")</th>
                        <th>@Language.GetString("CreationDate")</th>
                        <th>@* with urFriends goes to the related link in shop *@</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Items.Any())
                    {

                        @foreach (var item in Model.Items)
                        {
                            var src = item.Images.Any(_ => _.IsMain) ?
                                item.Images.First(_ => _.IsMain).Url : "/imgs/NoImage.png";

                            var img = $"<img src='{src}' width='75' height='75' />";
                            <tr class="ListCell">
                                <td>@(++i)</td>
                                <td>@Html.Raw(img)</td>
                                <td>@(item.MultiLingualProperties.Any(_=>_.LanguageId == langId) ? item.MultiLingualProperties.First(_ => _.LanguageId == langId).Name : "")</td>
                                <td>@(item.Unit.UnitNames.Any(_=>_.LanguageId == langId) ? item.Unit.UnitNames.First(_ => _.LanguageId == langId).Name : "")</td>
                                <td>@(string.Join("|", item.GroupNames))</td>
                                <td>@item.UniqueCode</td>
                                <td>@item.Inventory</td>
                                <td>
                                    @(item.Prices.Any(_ =>_.StartDate <= DateTime.UtcNow && _.IsActive && DateTime.Now >= _.StartDate && (_.EndDate == null || DateTime.Now < _.EndDate))
                            ? item.Prices.First(_ => _.StartDate <= DateTime.UtcNow && _.IsActive && DateTime.Now >= _.StartDate && (_.EndDate == null || DateTime.Now < _.EndDate)).PriceValue : "")
                                </td>
                                <td>@item.CreationDate</td>
                                <td>
                                    <button class="btn btn-sm btn-dark bg-gradient">
                                        <i style="position: relative;left: 5px;top: 2px;" class="fa fa-eye"></i>@Language.GetString("btn_Show")
                                    </button>
                                </td>
                                <td>
                                    @if (ViewBag.Permissions["Edit"])
                                    {
                                        <a asp-action="AddEdit" asp-controller="Product" asp-route-id="@item.ProductId" class="btn btn-sm btn-info bg-gradient">
                                            <i style="position: relative;left: 5px;top: 2px;" class="fa fa-edit"></i>@Language.GetString("btn_Edit")
                                        </a>
                                    }
                                    @if (ViewBag.Permissions["Remove"] && !item.IsDeleted)
                                    {
                                        <button onclick="EntityDelete('@item.ProductId')" class="btn btn-sm btn-danger bg-gradient">
                                            <i style="position: relative; left: 5px; top: 1px;" class="fa fa-trash"></i>@Language.GetString("btn_Delete")
                                        </button>
                                    }
                                    @if (ViewBag.Permissions["Remove"] && item.IsDeleted)
                                    {
                                        <button id="restoreRecord" onclick="EntityRestore('@item.ProductId')" class="btn btn-sm btn-warning bg-gradient">
                                            <i style="position: relative;left: 5px;top: 2px;" class="fa fa-refresh"></i>
                                            @Language.GetString("btn_Restore")
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11" class="ListCell">
                                <h6>@Language.GetString("AlertAndMessage_NoDataToShow")</h6>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card-footer">
        @await Component.InvokeAsync("Pagination", new PageViewModel
        {
            CurrentPage = Model.CurrentPage,
            ItemsCount = Model.ItemsCount,
            PageSize = Model.PageSize,
            Navigation = Url.Action("List", "Product"),
            QueryParams = Model.QueryString
        })
    </div>

</div>

<div aria-hidden="true" aria-labelledby="confirmModalLabel" class="modal fade" id="confirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title" id="confirmModalLabel">
                </h5>
                <button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button">
                </button>
            </div>
            <div class="modal-body" id="confirmModalBody">
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" onclick="onClickYes()" type="button">
                    @Language.GetString("btn_Confirm")
                </button>
                <button class="btn btn-secondary" data-bs-dismiss="modal" type="button">
                    @Language.GetString("btn_NotConfirm")
                </button>
            </div>
        </div>
    </div>
</div>

<div class="position-fixed h-100 w-100 p-5 bg-dark" id="toastAlert" style="display: block; left: 0; top: 0; z-index: 11;">
    <div aria-atomic="true" aria-live="assertive" class="toast" id="notificationToast" role="alert">
        <div class="toast-body p-3 fs-5 rounded-3 text-center" style="top: 40%; left: 200px;position: absolute;width: calc(100% - 400px);" id="notificationToastBody">
        </div>
    </div>
</div>

@await Component.InvokeAsync("ConfirmDelete", new ConfirmDeleteDTO { Url = Url.Action("Delete") })
@section Scripts{
    @if (dir == "rtl")
    {
        <script src="~/plugins/iCheck/icheck.min.js"></script>
    }
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <script src="~/plugins/datePicker/kamadatepicker.min.js"></script>
    }
    else
    {
        <script src="~/js/moment.min.js"></script>
        <script src="~/js/siteTemplate/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.min.js"></script>
    }

    <script src="~/plugins/select2/js/select2.js"></script>
    <script>
        $(document).ready(function () {
            $("#toastAlert").hide();
            //icheckboxes
            if ("@dir" == "rtl") {
                $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                    checkboxClass: 'icheckbox_minimal-blue',
                    radioClass: 'iradio_minimal-blue'
                })
            }
            //datetimepicker
            if ("@CultureInfo.CurrentCulture.Name" === "fa-IR")
            {
                kamaDatepicker('dtpFromCreationDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
                kamaDatepicker('dtpToCreationDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
            }
            else
            {
                $('#dtpFromCreationDate').datetimepicker({
                    format: 'L'
                });
                $('#dtpToCreationDate').datetimepicker({
                    format: 'L'
                });
            }
            //multiselect
            $("#cmbProductGroupFilter").select2({ dir : '@dir', theme : 'bootstrap4'});

            if ("@langId" != "") {
                $("#cmbLangIdFilter").val("@langId");
            }

           $("#cmbLangIdFilter").change(function () {
            debugger;
               var queryString = '?LanguageId=' + $("#cmbLangIdFilter").val();
               window.location.href = '@Url.Action("List", "Product")' + queryString;
           });

            $("#btnSearch").click(function () {
                debugger;
                var queryString = "?LanguageId=" + $("#cmbLangIdFilter").val();
                if ($("#cmbProductGroupFilter").val().length != 0) {
                    var groupIds = $("#cmbProductGroupFilter").val().join('|');
                    queryString += "&groupIds=" + groupIds;
                }
                if ($("#txtProductNameFilter").val() != "") {
                    queryString += "&name=" + $("#txtProductNameFilter").val().trim();
                }
                if ($("#txtDescriptionFilter").val() != "") {
                    queryString += "&desc=" + $("#txtDescriptionFilter").val().trim();
                }
                if ($("#txtUniqueCodeFilter").val() != "") {
                    queryString += "&code=" + $("#txtUniqueCodeFilter").val().trim();
                }
                if ($("#dtpFromCreationDate").val() != "") {
                    queryString += "&from=" + $("#dtpFromCreationDate").val().trim();
                }
                if ($("#dtpToCreationDate").val() != "") {
                    queryString += "&to=" + $("#dtpToCreationDate").val().trim();
                }
                if ($("#txtLeastProduct").val() != "0") {
                    queryString += "&inventory=" + $("#txtLeastProduct").val();
                }
                if ($("#chbProductsOnPromotion").prop("checked") == true) {
                    queryString += "&promotion=true";
                }
                if ($("#chbExistentProducts").prop("checked") == true) {
                    queryString += "&exist=true";
                }
                window.location.href = '@Url.Action("List", "Product")' + queryString;
            });
        });
        function EntityDelete(id) {
            debugger;
            Swal.fire({
                title: '@Language.GetString("AlertAndMessage_AreYouSure")',
                text: '@Language.GetString("AlertAndMessage_DeleteEntity")',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d51c1c',
                cancelButtonColor: '#009c09db',
                confirmButtonText: '@Language.GetString("btn_Confirm")',
                cancelButtonText: '@Language.GetString("btn_NotConfirm")'
                }).then((result) => {
                    if (result.isConfirmed) {
                        debugger;
                $.ajax({
                    type: 'Get',
                    url: '@Url.Action("Delete", "Product")' + "/" + id,
                beforeSend: function() {
                    AddLoading($("#productListCard"));
                },
                    success: function (resultData) {
                        debugger;
                        removeLoading($("productListCard"))
                if (resultData.status === "Success") {
                Swal.fire({
                icon: 'success',
                text: resultData.message,
                showConfirmButton: false,
                timer: 3000
                }).then(() => {
                window.location.reload();
                });
                }

                if (resultData.status === "Error") {
                Swal.fire({
                icon: 'error',
                text: resultData.message,
                showConfirmButton: false,
                timer: 1500
                });
                }
                }
                });
                }
                });
        }

        function EntityRestore(id) {
            debugger;
                Swal.fire({
                    title: '@Language.GetString("AlertAndMessage_AreYouSure")',
                    text: '@Language.GetString("AlertAndMessage_EntityRestoreText")',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d51c1c',
                    cancelButtonColor: '#009c09db',
                    confirmButtonText: '@Language.GetString("btn_Confirm")',
                    cancelButtonText: '@Language.GetString("btn_NotConfirm")'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'Get',
                            url:  '@Url.Action("Restore", "Product")' + '?id=' + id,
                            success: function(resultData) {
                                if (resultData.status === "success") {
                                    Swal.fire({
                                        icon: 'success',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 2000
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                }
                                if (resultData.status === "error") {
                                    Swal.fire({
                                        icon: 'error',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 2000
                                    });
                                }
                            }
                        });
                    }
                });
            }
    </script>
}
