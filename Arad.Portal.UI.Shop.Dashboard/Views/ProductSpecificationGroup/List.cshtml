@using System.Web
@using Arad.Portal.GeneralLibrary.Utilities;
@using Arad.Portal.DataLayer.Models.ProductSpecificationGroup;
@using Arad.Portal.UI.Shop.Dashboard.ViewComponents;
@model PagedItems<SpecificationGroupViewModel>
@{
    var i = ((Model.CurrentPage - 1) * Model.PageSize);
    bool isSearch = false;
    System.Collections.Specialized.NameValueCollection queryString = null;
    var langId = "";
    if (!string.IsNullOrWhiteSpace(Model.QueryString))
    {
        queryString = System.Web.HttpUtility.ParseQueryString(Model.QueryString);
        isSearch = !string.IsNullOrWhiteSpace(queryString["LanguageId"]);
        if (isSearch)
        {
            langId = queryString["LanguageId"].ToString();
        }
        queryString.Remove("page");
    }
   if(langId == "")
    {
        langId = ViewBag.DefLangId;
    }
    var searchCollapseClass = isSearch ? "collapse show" : "collapse";
    var baseAdd = Config["BaseAddress"];
   
}

<div class="card card-dark">
    <a data-bs-toggle="collapse" role="button" href="#searchCollapse" aria-expanded="@(!isSearch ? "false" : "true" )" class="@(!isSearch ? " collapsed" : null)">

        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-search">
                    <span>@Language.GetString("btn_Search")</span>
                </i>
            </h5>
        </div>
    </a>
    <div id="searchCollapse" class="@searchCollapseClass">
        <div class="card-body">

            <div class="row">

                <div class="form-group col-md-3">
                    <label class="form-label">@Language.GetString("LanguageName")</label>
                    <select class="form-control selectpicker" data-live-search="true" id="cmbLangIdFilter" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))">
                    </select>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-3">
                <h5 class="card-title">@Language.GetString("Menu_ProductSpecificationGroup")</h5>
            </div>
            <div class="col-md-3 offset-md-6">
                <div class="card-tools float-end">
                  
                        <a asp-action="AddEdit" asp-controller="ProductSpecificationGroup" class="btn btn-success bg-gradient btn-sm">
                            <i  class="fa fa-plus pt-1"></i>@Language.GetString("btn_Add")
                        </a>
                  
                </div>
            </div>
        </div>
    </div>
    <div class="card-body table-responsive" id="productSpecGroupListCard">
        <table class="table table-bordered table-striped align-middle">
            <thead>
                <tr style="text-align:center;">
                    <th>@Language.GetString("tbl_RowName")</th>
                    <th>@Language.GetString("SpecificationGroupName")</th>
                    <th>@Language.GetString("RelatedLanguage")</th>
                    <th>@Language.GetString("Currency")</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items.Any())
                {

                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="ListCell">@(++i)</td>
                            <td class="ListCell">@item.GroupName.Name</td>
                            <td class="ListCell">@item.GroupName.LanguageName</td>
                            <td class="ListCell">@item.GroupName.CurrencyName</td>
                            <td>
                              
                                    <a asp-action="AddEdit" asp-controller="ProductSpecificationGroup" asp-route-id="@item.SpecificationGroupId" class="btn btn-sm btn-warning bg-gradient">
                                        <i  class="fa fa-edit"></i>@Language.GetString("btn_Edit")
                                    </a>
                              
                                @if (!item.IsDeleted)
                                {
                                    <button onclick="EntityDelete('@item.SpecificationGroupId')" class="btn btn-sm btn-danger bg-gradient">
                                        <i  class="fa fa-trash"></i>@Language.GetString("btn_Delete")
                                    </button>
                                }
                                @if (item.IsDeleted)
                                {
                                    <button id="restoreRecord" onclick="EntityRestore('@item.SpecificationGroupId')" class="btn btn-sm btn-secondary bg-gradient">
                                        <i  class="fa fa-refresh"></i>
                                        @Language.GetString("btn_Restore")
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="ListCell">
                            <h6>@Language.GetString("AlertAndMessage_NoDataToShow")</h6>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="card-footer">
        @await Component.InvokeAsync("Pagination", new PageViewModel
      {
          CurrentPage = Model.CurrentPage,
          ItemsCount = Model.ItemsCount,
          PageSize = Model.PageSize,
          Navigation = Url.Action("List", "ProductSpecificationGroup"),
          QueryParams = Model.QueryString
      })
    </div>

</div>


@section Scripts{
    <script>
        $(document).ready(function () {
           
            if ("@langId" != "") {
                $("#cmbLangIdFilter").val("@langId");
            }

           $("#cmbLangIdFilter").change(function () {
            debugger;
               var queryString = '?LanguageId=' + $("#cmbLangIdFilter").val();
               window.location.href = '@Url.Action("List", "ProductSpecificationGroup")' + queryString;
            });
        });
        function EntityDelete(id) {
            debugger;
             entityId = id;
			typeOfRequest = 'Get';
			confirmUrl = '@Url.Action("Delete", "ProductSpecificationGroup")' + "/" + id,
			document.getElementById('confirmModalLabel').innerHTML = '@Language.GetString("btn_Delete")';
			document.getElementById('confirmModalBody').innerHTML = '@Language.GetString("AlertAndMessage_DeletionSureness")';
			$('#confirmModal').modal('show');
        }

        function EntityRestore(id) {
            debugger;
             entityId = id;
			typeOfRequest = 'Get';
			confirmUrl = '@Url.Action("Restore", "ProductSpecificationGroup")' + '/' + id,
			document.getElementById('confirmModalLabel').innerHTML = '@Language.GetString("btn_Restore")';
			document.getElementById('confirmModalBody').innerHTML = '@Language.GetString("AlertAndMessage_RestorationSureness")';
			$('#confirmModal').modal('show');
            }
    </script>
}
