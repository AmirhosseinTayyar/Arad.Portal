@using System.Web
@using Arad.Portal.GeneralLibrary.Utilities;
@using Arad.Portal.DataLayer.Models.ProductSpecification;
@using Arad.Portal.UI.Shop.Dashboard.ViewComponents;
@model PagedItems<ProductSpecificationViewModel>
@{
    var i = ((Model.CurrentPage - 1) * Model.PageSize);
    bool isSearch = false;
    System.Collections.Specialized.NameValueCollection queryString = null;
    var langId = "";
    if (!string.IsNullOrWhiteSpace(Model.QueryString))
    {
        queryString = System.Web.HttpUtility.ParseQueryString(Model.QueryString);
        isSearch = !string.IsNullOrWhiteSpace(queryString["LanguageId"]);
        if (isSearch)
        {
            langId = queryString["LanguageId"].ToString();
        }
        queryString.Remove("page");
    }
    else
    {
        langId = ViewBag.DefLangId;
    }
    var searchCollapseClass = isSearch ? "collapse show" : "collapse";
    var dir = "";
    if (CultureInfo.CurrentCulture.TextInfo.IsRightToLeft)
    {
        dir = "rtl";
    }
    else
    {
        dir = "ltr";
    }
}


<div class="card card-dark">
    <a data-bs-toggle="collapse" role="button" href="#searchCollapse" aria-expanded="@(!isSearch ? "false" : "true" )" class="@(!isSearch ? " collapsed" : null)">

        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-search">
                    <span>@Language.GetString("btn_Search")</span>
                </i>
            </h5>
        </div>
    </a>

    <div id="searchCollapse" class="@searchCollapseClass">
        <div class="card-body">
            <div class="row">
                <div class="form-group col-md-3">
                    <label>@Language.GetString("LanguageName")</label>
                    <select class="form-control select2" id="cmbLangIdFilter" asp-items="@(new SelectList(ViewBag.LangList,"Value","Text"))">
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-3">
                <h5 class="card-title">@Language.GetString("Menu_ProductSpecifications")</h5>
            </div>
            <div class="col-md-3 offset-md-6">
                <div class="card-tools float-end">
                    @if (ViewBag.Permissions["Add"])
                    {
                        <a asp-action="AddEdit" asp-controller="ProductSpecification" class="btn btn-success btn-sm bg-gradient">
                            <i style="position: relative; left: 5px; top: 2px;" class="fa fa-plus"></i>&nbsp; @Language.GetString("btn_Add")
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="card-body table-responsive" id="productSpecificationListCard">
        <table class="table table-bordered table-striped align-middle">
            <thead>
                <tr style="text-align:center;">
                    <th>@Language.GetString("tbl_RowName")</th>
                    <th>@Language.GetString("RelatedLanguage")</th>
                    <th>@Language.GetString("tbl_GroupName")</th>
                    <th>@Language.GetString("tbl_SpecificationName")</th>
                    <th>@Language.GetString("tbl_SpecificationValues")</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items.Any())
                {

                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="ListCell">@(++i)</td>
                            <td class="ListCell">@item.SpecificationNameValues.LanguageName</td>
                            <td class="ListCell">@item.SpecificationNameValues.GroupName</td>
                            <td class="ListCell">@item.SpecificationNameValues.Name</td>
                            <td class="ListCell">@(string.Join(", ", item.SpecificationNameValues.NameValues))</td>
                            <td>
                                @if (ViewBag.Permissions["Edit"])
                                {
                                    <a asp-action="AddEdit" asp-controller="ProductSpecification" asp-route-id="@item.ProductSpecificationId" class="btn btn-sm btn-warning bg-gradient">
                                        <i style="position: relative;left: 5px;top: 2px;" class="fa fa-edit"></i>@Language.GetString("btn_Edit")
                                    </a>
                                }
                                @if (ViewBag.Permissions["Remove"] && !item.IsDeleted)
                                {
                                    <button onclick="EntityDelete('@item.ProductSpecificationId')" class="btn btn-sm btn-danger bg-gradient">
                                        <i style="position: relative; left: 5px; top: 1px;" class="fa fa-trash"></i>@Language.GetString("btn_Delete")
                                    </button>
                                }
                                @if (ViewBag.Permissions["Remove"] && item.IsDeleted)
                                {
                                    <button onclick="EntityRestore('@item.ProductSpecificationId')" class="btn btn-sm btn-secondary bg-gradient">
                                        <i style="position: relative;left: 5px;top: 2px;" class="fa fa-refresh"></i>
                                        @Language.GetString("btn_Restore")
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="ListCell">
                            <h6>@Language.GetString("AlertAndMessage_NoDataToShow")</h6>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="card-footer">
        @await Component.InvokeAsync("Pagination", new PageViewModel
      {
          CurrentPage = Model.CurrentPage,
          ItemsCount = Model.ItemsCount,
          PageSize = Model.PageSize,
          Navigation = Url.Action("List", "ProductSpecification"),
          QueryParams = Model.QueryString
      })
    </div>

</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            debugger;
            $("#toastAlert").hide();
            if ("@langId" != "") {
                $("#cmbLangIdFilter").val("@langId");
            }

           $("#cmbLangIdFilter").change(function () {
            debugger;
               var queryString = '?LanguageId=' + $("#cmbLangIdFilter").val();
               window.location.href = '@Url.Action("List", "ProductSpecification")' + queryString;
            });
        });
        function EntityDelete(id) {
            debugger;
        Swal.fire({
            title: '@Language.GetString("AlertAndMessage_AreYouSure")',
            text: '@Language.GetString("AlertAndMessage_DeleteProductUnit")',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d51c1c',
            cancelButtonColor: '#009c09db',
            confirmButtonText: '@Language.GetString("btn_Confirm")',
            cancelButtonText: '@Language.GetString("btn_NotConfirm")'
            }).then((result) => {
                if (result.isConfirmed) {
                    debugger;
            $.ajax({
                type: 'Get',
                url: '@Url.Action("Delete", "ProductSpecification")' + "/" + id,
            beforeSend: function() {
                AddLoading($("#productSpecificationListCard"));
            },
                success: function (resultData) {
                    debugger;
                    removeLoading($("productSpecificationListCard"))
            if (resultData.status === "Success") {
            Swal.fire({
            icon: 'success',
            text: resultData.message,
            showConfirmButton: false,
            timer: 3000
            }).then(() => {
            window.location.reload();
            });
            }

            if (resultData.status === "Error") {
            Swal.fire({
            icon: 'error',
            text: resultData.message,
            showConfirmButton: false,
            timer: 1500
            });
            }
            }
            });
            }
            });
        }

        function EntityRestore(id) {
            debugger;
                Swal.fire({
                    title: '@Language.GetString("AlertAndMessage_AreYouSure")',
                    text: '@Language.GetString("AlertAndMessage_EntityRestoreText")',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d51c1c',
                    cancelButtonColor: '#009c09db',
                    confirmButtonText: '@Language.GetString("btn_Confirm")',
                    cancelButtonText: '@Language.GetString("btn_NotConfirm")'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'Get',
                            url:  '@Url.Action("Restore", "ProductSpecification")' + '?id=' + id,
                            success: function(resultData) {
                                if (resultData.status === "success") {
                                    Swal.fire({
                                        icon: 'success',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 2000
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                }
                                if (resultData.status === "error") {
                                    Swal.fire({
                                        icon: 'error',
                                        text: resultData.message,
                                        showConfirmButton: false,
                                        timer: 2000
                                    });
                                }
                            }
                        });
                    }
                });
            }
    </script>
}
