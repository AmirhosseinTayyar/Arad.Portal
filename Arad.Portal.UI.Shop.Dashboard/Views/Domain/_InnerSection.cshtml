@model Arad.Portal.DataLayer.Models.DesignStructure.ColContent
@{
    var lan = "";
    if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        lan = "fa";
    }
    else
    {
        lan = "en";
    }
   
}
<div class="row">
    <div class="col-12">
         <label class="form-label">@Language.GetString("Template_ContentType")</label>
        <br />
        <select class="form-control selectpicker drpContentType" onchange="selectDrpContentType(this);"  cn ="@Model.ColNumber" rn="@ViewBag.RowNumber" sec = "@Model.Section"  data-live-search="true">
             <option value="0">@Language.GetString("AlertAndMessage_Choose")</option>
            <option value="1">@Language.GetString("Template_SystemModules")</option>
            <option value="2">@Language.GetString("Template_Editor")</option>
        </select>
    </div>
</div>
<div class="row parent" cn ="@Model.ColNumber" rn="@ViewBag.RowNumber" sec = "@Model.Section" style="min-height:300px;">
    <div class="col-12 modulePart d-none">
         <select class="form-control selectpicker moduleList" data-live-search="true" asp-items="@(new SelectList(ViewBag.ModuleList,"Value","Text"))">
         </select>
         <br />
        <div class="d-flex justify-content-end">
            <button  class="btn btn-success bg-gradient btn-sm float-end btnAddModule m-1" onclick="addModule(this);" cn ="@Model.ColNumber" rn="@ViewBag.RowNumber" sec = "@Model.Section"
            type="button">@Language.GetString("btn_Select")</button>
        </div>
        <br/>
        <div class="paramsDiv" cn ="@Model.ColNumber" rn="@ViewBag.RowNumber" sec = "@Model.Section" ></div>
    </div>
    <div class="col-12 editorPart d-none" >
        <textarea id='@($"editor_{Model.ColNumber}_{ViewBag.RowNumber}")' name='@($"editor_{Model.ColNumber}_{ViewBag.RowNumber}")' class="form-control" rows="40"></textarea>
        <script>
     
               editorId = `editor_${'@Model.ColNumber'}_${'@ViewBag.RowNumber'}`;
                var config = {
                    filebrowserImageUploadUrl: 'Image/content-file-upload',
                    language: '@lan'
                }
                CKEDITOR.replace(editorId, config);
        </script>

         <button  class="btn btn-success bg-gradient btn-sm float-end btnHtmlSanitizer m-1" onclick="sinitize(this);" editorid ='@($"editor_{Model.ColNumber}_{ViewBag.RowNumber}")' cn ="@Model.ColNumber" rn="@ViewBag.RowNumber" sec = "@Model.Section"
            type="button">@Language.GetString("btn_Validation")</button>
    </div>
    <div class="row finalColumnContent d-none" classNames ="@Model.ColumnClassNames"></div>
      <div class="row htmlColumnContentPreview d-none mx-2" classNames="@Model.ColumnClassNames">
      </div>
          
@*difference between these finalColumnContent and htmlColumnContentPreview is about modules the first one store with parameters and second one html of executed module will render *@
   
   <div class="row moduleDataPreview d-none mx-2" >
   </div>
</div>


<script>
    var domainId = "";
    $(document).ready(function(){
       
    });
    function addModule(sender)
    {
        var parentDiv = $(sender).closest(".parent");
        var colnumber =  $(sender).attr("cn");
        var cnt = $(sender).closest(`div[colnum='${colnumber}']`).attr("cnt");
             
             var selectedModuleName = $(parentDiv).find(".moduleList").find("option:selected").text();
            var selectedModuleId = $(parentDiv).find(".moduleList").find("option:selected").val();
            var paramDiv = $(parentDiv).find(".paramsDiv");
            $.ajax({
                 url:"@Url.Action("GetSpecificModule","Domain")"+"?moduleName="+selectedModuleName+"&id="+'@ViewBag.DomainId'+"&colCount="+cnt,
                 type:'Get',
                 statusCode:{
                     200:function(data){
                          $(paramDiv).html(data);
                          $(".typeList").selectpicker();
                     }
                 }
               });
    }

    function sinitize(sender)
    {
     
        editorId  =$(sender).attr("editorId");
            var htmlData = CKEDITOR.instances[editorId].getData();
            var dataToSend= JSON.stringify(htmlData);
            $.ajax({
                 url:"@Url.Action("SanitizeCkEditorContent","Domain")",
                 type:'Post',
                 data: dataToSend,
                 contentType: "application/json; charset=utf-8",
                 statusCode:{
                     200:function(data){
                      
                        //show whether this html is valid or not
                        if(!data.isvalid)
                        {
                          $('#mainToastBody').html('<i class="fas fa-exclamation-triangle"></i>@Language.GetString("AlertAndMessage_InvalidEditorContent")');
                          $('#mainToastBody').addClass('alert-danger');
                          var toastDiv = $("#mainToast");
                          $("#toastPanel").show();
                          var toast = new bootstrap.Toast(toastDiv);
                          toast.show();
                          setTimeout(function(){
                              CKEDITOR.instances.editorId.setData(""),3000
                          });
                        }else //it is valid
                        {
                            $('#mainToastBody').html('<i class="fas fa-exclamation-triangle"></i>@Language.GetString("AlertAndMessage_ValidEditorContent")');
                            $('#mainToastBody').addClass('alert-success');
                            var toast = new bootstrap.Toast($("#mainToast"));
                            toast.show();
                         
                          var data = "<div target='editor'>"+ htmlData +"</div>";
                          $(sender).closest(".parent").find(".finalColumnContent").append(data);

                          $(sender).closest(".parent").find(".htmlColumnContentPreview").append(htmlData);
                        }
                     }
                 }
               });
    }

    function selectDrpContentType(sender)
    {
      
        var colnumber = $(sender).attr("cn");
        domainId = $(sender).closest(`div[colnum='${colnumber}']`).attr("did");
        cnt = $(sender).closest(`div[colnum='${colnumber}']`).attr("cnt");
      
        var val = $(sender).val();
        var targetDiv = $(sender).closest(".row").siblings(".row.parent");
        //var targetDivId =`#${targetDivId}`;
        switch(val)
        {
            case "1":
            $(targetDiv).find(".modulePart").removeClass("d-none");
            $(targetDiv).find(".editorPart").addClass("d-none");
            break;
            case "2":
            $(targetDiv).find(".editorPart").removeClass("d-none");
            $(targetDiv).find(".modulePart").addClass("d-none");
            break;
        }
    }
    function addModulesWithParams(sender)
   {
      
       var obj = {};//an instance of ModuleWithParametersValue
       obj.ParametersValue =[];
        var targetParamsDiv = $(sender).closest(".paramsDiv");
        var count = 0; 
                              
        var parent =  $(sender).closest(".parent");
        var targetDivId ="";
        
            obj.ModuleId = $(sender).closest(".modulePart").find(".moduleList option:selected").val()
            obj.ModuleName = $(sender).closest(".modulePart").find(".moduleList option:selected").text();
           
            $(targetParamsDiv).find(".par").each(function(){

                var id = $(this).attr("id");
                switch(obj.ModuleName)
                {
                    case "ProductList":
                    switch(id)
                    {  
                        case "templateSection":
                        selectedTemplate = $("input[name='rdbProductTemplateList']:checked").val();
                        break;
                        case "typeList":
                        selectedType = $(`#${id}`).val();
                        break;
                        case "countToShow":
                        count = $(`#${id}`).val();
                        break;
                    }
                    break;
                    case "ContentList":
                    switch(id)
                    {
                        case "templateSection":
                        selectedTemplate = $("input[name='rdbContentTemplateList']:checked").val();
                        switch(selectedTemplate)
                        {
                            case "First":
                            count = 6;
                            break;
                            case "Second":
                            count = 4;
                            break;
                            case "Third":
                            count = 8;
                            break;
                        }
                        break;
                        case "typeList":
                        selectedType = $(`#${id}`).val();
                        break;
                        case "countToShow":
                            count = $(`#${id}`).val();
                        break;
                    }
                    break;
              }
        });
        var url = "";
        if(obj.ModuleName.toLowerCase() =="productlist")
        {
            url = "@Url.Action("GetProductModuleViewComponent", "Domain")"+"?productType="+ selectedType +"&selectionTemplate="+selectedTemplate+"&count="+ count;
            obj.ParametersValue.Count = count;
            obj.ParametersValue.ProductOrContentType = selectedType;
            obj.ParametersValue.ProductTemplateDesign = selectedTemplate;
        }
        else if(obj.ModuleName.toLowerCase() == "contentlist")
        {
            url = "@Url.Action("GetContentModuleViewComponent", "Domain")"+"?contentType="+ selectedType +"&selectionTemplate="+selectedTemplate+"&count="+ count;
            obj.ParametersValue.Count = count;
            obj.ParametersValue.ProductOrContentType = selectedType;
            obj.ParametersValue.ContentTemplateDesign = selectedTemplate;
        }
        var data = JSON.stringify(obj);
        data =`<div target='module'>${data}</div>`;
        var finalData = $(parent).find(".finalColumnContent").append(data);

        $.ajax({
            type: "Get",
            dataType: "html",
            url: url, 
            success: function (result) {
             
                if (result != "") {
                    $(parent).find(".moduleDataPreview").html(result).removeClass("d-none");
                    $(parent).find(".htmlColumnContentPreview").append(result);
                    if(obj.ModuleName.toLowerCase() =="productlist")
                    {
                         $(".owl-carousel").owlCarousel({
                                loop: true,
                                rtl: true,
                                /* autoplay: true,*/
                                margin: 10,
                                animateOut: 'fadeOut',
                                animateIn: 'fadeIn',
                                nav: true,
                                /*dots: true,*/
                                autoplayHoverPause: false,
                                items: 3,
                                navText: ["<div class='nav-btn prev-slide'><i class='fas fa-chevron-left' style='line-height:5;font-size:larger;'></i></div>", "<div class='nav-btn next-slide'><i class='fas fa-chevron-right' style='line-height:5;font-size:larger;'></i></div>"],
                                responsive: {
                                    0: {
                                        items: 1
                                    },
                                    600: {
                                        items: 3
                                    },
                                    1000: {
                                        items: 5
                                    }
                                }
                           });
                    }
                    setTimeout(function(){
                        $(parent).find(".moduleDataPreview").html("");
                        $(parent).find(".moduleDataPreview").addClass("d-none");
                    }, 5000);
                }
            },
        });
        
   }
</script>