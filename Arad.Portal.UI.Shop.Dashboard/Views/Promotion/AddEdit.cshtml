@model Arad.Portal.DataLayer.Models.Promotion.PromotionDTO
@using Arad.Portal.DataLayer.Models.Shared;
@{
    var alert = Language.GetString("AlertAndMessage_GotIt");
    var error = Language.GetString("AlertAndMessage_Error");

    var dir = "";
    if (CultureInfo.CurrentCulture.TextInfo.IsRightToLeft)
    {
        dir = "rtl";
    }
    else
    {
        dir = "ltr";
    }
}
@section Styles{
    <link href="~/lib/bootstrap-iconpicker/css/bootstrap-iconpicker.css" rel="stylesheet" />
    <style>
        .text-danger {
            font-size: 12px;
        }

        .rounded-circle {
            width: 30px;
            height: 30px;
            padding: 6px 0px;
            border-radius: 15px;
            text-align: center;
            font-size: 12px;
            line-height: 1.42857;
        }
        .card-header {
            background-color: #e0dcdf;
        }
    </style>
    <link rel="stylesheet" href="~/css/bootstrap-select/bootstrap-select.css" />
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <link href="~/plugins/datePicker/kamadatepicker.css" rel="stylesheet" />
    }
}

<h4>  @Language.GetString("Menu_Promotion") </h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <div class="card" id="addPromotionCard">
            <div class="card-header">
                <h3 class="card-title" data-toggle="tab">
                    @(!string.IsNullOrWhiteSpace(Model.PromotionId) ?
               Language.GetString("EditPromotion_Title") : Language.GetString("AddPromotion_Title"))
                </h3>
            </div>

            <div class="card-body" id="addEditProductGroupCard">
                <input type="hidden" value="@Model.PromotionId" asp-for="PromotionId" />
                <div class="row">
                    @{
                        if (!string.IsNullOrWhiteSpace(Model.PromotionId))
                        {
                            <div class="form-group col-md-6">
                                <label asp-for="ModificationReason">@Language.GetString("ModificationReason")</label>
                                <textarea dir="rtl" asp-for="ModificationReason" class="form-control" rows="3"></textarea>
                                <span data-val-result="ModificationReason" class="text-danger"></span>
                            </div>
                        }
                    }
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <label for="title">@Language.GetString("Title")</label><br />
                        <input type="text" class="form-control" id="title" asp-for="Title">
                        <span data-val-result="title" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-3">
                        <label for="currencyId">@Language.GetString("Currency")</label><br />
                        <select class="form-control selectpicker" data-live-search="true" id="currencyId" asp-for="CurrencyId"
                                asp-items="@(new SelectList(ViewBag.CurrencyList,"Value","Text", Model.CurrencyId ))">
                        </select>
                        <span data-val-result="currencyId" class="text-danger"></span>
                    </div>


                </div>
                <div class="row" id="firstRow">
                    <div class="form-group col-md-2">
                        <label for="promotionTypeId">@Language.GetString("Classification")</label><br />
                        <select class="form-control selectpicker" id="promotionTypeId" data-live-search="true"
                                asp-items="@(new SelectList(ViewBag.PromotionTypes,"Value","Text", (int)Model.PromotionType))">
                        </select>
                        <span data-val-result="promotionTypeId" class="text-danger"></span>
                    </div>

                    @*@if (ViewBag.IsSysAcc)
            {
                <div class="form-group col-md-3" id="venderSection">
                    <label for="productVendor">@Language.GetString("ProductVendor")</label><br />
                    <select class="form-control selectpicker" id="productVendor" data-live-search="true"
                            asp-items="@(new SelectList(ViewBag.Vendors, "Value", "Text"))">
                    </select>
                </div>
            }
            <div class="form-group col-md-3" id="">
                <label for="productGroupId">@Language.GetString("tbl_ProductGroup")</label><br />
                <select class="form-control selectpicker" id="productGroupId" data-live-search="true" >
                </select>
                <span data-val-result="productGroupId" class="text-danger"></span>
            </div>

            <div class="form-group col-md-3" id="">
                <label for="productId">@Language.GetString("Product")</label><br />
                <select class="form-control selectpicker" id="productId" data-live-search="true" >
                </select>
                <span data-val-result="productId" class="text-danger"></span>
            </div>*@
                   
                </div>
                <div class="row proSec" style="display:none;"> <div class="col-md-12" ><lable class="form-control" style="background-color: #e0dcdf;">@Language.GetString("ProductsInPromotion")</lable></div></div>

                <div class="row proSec" style="display:none;">
                    <div class="col-md-12" style="background-color:">
                        <table class="table table-hover table-bordered">
                            <thead>
                                <tr style="text-align:center;">
                                    <th>@Language.GetString("tbl_GroupName")</th>
                                    <th style="display:none;"></th>
                                    <th>@Language.GetString("tbl_VendorName")</th>
                                    <th style="display:none;"></th>
                                    <th>@Language.GetString("tbl_ProductName")</th>
                                    <th style="display:none;"></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="infoList">
                                @if (Model.PromotionTypeId == 2 && Model.Infoes.Any())
                                {
                                    @foreach (var item in Model.Infoes)
                                    {
                                        <tr style="text-align:center;">
                                            <td>@item.AffectedProductGroupName</td>
                                            <td style="display:none;">@item.AffectedProductGroupId</td>
                                            <td>@item.ProductVendorName</td>
                                            <th style="display:none;">@item.ProductVendorId</th>
                                            <td>@item.AffectedProductName</td>
                                            <td style="display:none;">@item.AffectedProductId</td>
                                            <td>
                                                <button type="button" class="btn btn-danger rounded-circle bg-gradient" onclick="deleteFromList(this);">
                                                    <i class="fa fa-minus" style="position: relative;padding:3px;"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr style="text-align:center;">
                                        <td colspan="7">@Language.GetString("AlertAndMessage_NoDataToShow")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <label for="discountTypeId">@Language.GetString("Type")</label><br />
                        <select class="form-control selectpicker" id="discountTypeId" data-live-search="true"
                                asp-items="@(new SelectList(ViewBag.DiscountTypes,"Value","Text", (int)Model.DiscountType))">
                        </select>
                        <span data-val-result="discountTypeId" class="text-danger"></span>
                    </div>

                    <div class="form-group col-md-3" id="productGroupTypeSection" style="display:none;">
                    </div>

                    <div class="form-group col-md-3" id="productTypeSection" style="display:none;">
                    </div>

                </div>
                <div class="row type2" style="display:none;">
                    <div class="col-md-3" >
                        <label for="boughtCount">@Language.GetString("BoughtCount")</label><br />
                        <input type="number" class="form-control" id="boughtCount" value="@Model.BoughtCount">
                        <span data-val-result="boughtCount" class="text-danger"></span>
                    </div>
                    <div class="col-md-3" >
                        <label for="promotedCountofUnit">@Language.GetString("PromotedCountofUnit")</label><br />
                        <input type="number" class="form-control" id="promotedCountofUnit" value="@Model.PromotedCountofUnit">
                        <span data-val-result="PromotedCountofUnit" class="text-danger"></span>
                    </div>
                    <div class="col-md-6"></div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3" id="PriceOrDiscount">
                        <label for="value">@Language.GetString("Value")</label><br />
                        <input type="number" class="form-control" id="value" placeholder=" " value="@Model.Value">
                        <span data-val-result="value" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-2">
                        <label>@Language.GetString("FromDate")</label>
                        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                        {
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <input autocomplete="off" id="dtpFromDate" type="text" class="form-control" />
                            </div>
                        }
                        else
                        {
                            <div class="input-group date" id="dtpFromDate" data-target-input="nearest">
                                <input type="text" class="form-control datetimepicker-input" />
                                <div class="input-group-append" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        }
                        <span data-val-result="FromDate" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-2">
                        <label>@Language.GetString("ToDate")</label>
                        @if (CultureInfo.CurrentCulture.Name == "fa-IR")
                        {
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <input autocomplete="off" id="dtpToDate" type="text" class="form-control" />
                            </div>
                        }
                        else
                        {
                            <div class="input-group date" id="dtpToDate" data-target-input="nearest">
                                <input type="text" class="form-control datetimepicker-input" />
                                <div class="input-group-append" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        }
                        <span data-val-result="ToDate" class="text-danger"></span>
                    </div>
                </div>

            </div>
            <div class="card-footer">
                <div class="row">
                    <input type="button" id="btnAddPromotion" value="@Language.GetString("btn_Save")" class="btn btn-success bg-gradient" />
                    <a asp-action="List" class="btn btn-primary bg-gradient">@Language.GetString("btn_Back")</a>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    @if (CultureInfo.CurrentCulture.Name == "fa-IR")
    {
        <script src="~/plugins/datePicker/kamadatepicker.min.js"></script>
    }
    else
    {
        <script src="~/js/moment.min.js"></script>
        <script src="~/js/siteTemplate/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.min.js"></script>
    }
    <script src="~/js/popperjs/popper.min.js"></script>
    <script src="~/js/plugins/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/js/bootstrap-select/bootstrap-select.js"></script>

    <script>

  $(document).ready(function () {
      debugger;

       //datetimepicker
            if ("@CultureInfo.CurrentCulture.Name" === "fa-IR")
            {
                kamaDatepicker('dtpFromDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
                kamaDatepicker('dtpToDate', { buttonsColor: "red", forceFarsiDigits: true, markToday: true, gotoToday: true });
            }
            else
            {
                $('#dtpFromDate').datetimepicker({
                    format: 'L'
                });
                $('#dtpToDate').datetimepicker({
                    format: 'L'
                });
      }
      LoadData();
    $("#promotionTypeId").change(function () {
               debugger;
               if ($("#promotionTypeId").val() != "-1") {
                   if ($("#promotionTypeId").val() == "1" || $("#promotionTypeId").val() == "2")
                   {
                       $("#firstRow").append(generateVendorSection());
                       $("#productVendor").selectpicker();
                       if ($("#promotionTypeId").val() == "2") {
                           $(".proSec").css("display", "block");
                       } else {
                           $(".proSec").css("display", "none");
                       }

                   }
                   else
                   {
                      
                       if ($("#vendorSection").length > 0)
                           $("#vendorSection").remove();

                       if ($("#groupSection").length > 0)
                           $("#groupSection").remove();

                       if ($("#productClassification").length > 0)
                           $("#productClassification").remove();

                       if ($("#productGroupClassification").length > 0)
                           $("#productGroupClassification").remove();
                       debugger;
                       $(".proSec").css("display", "none");
                   }
               }
               else
               {
                   if($("#vendorSection").length > 0)
                       $("#vendorSection").remove();

                   if($("#groupSection").length > 0)
                       $("#groupSection").remove();

                   if($("#productClassification").length > 0)
                       $("#productClassification").remove();

                   if($("#productGroupClassification").length > 0)
                       $("#productGroupClassification").remove();

                   $(".proSec").css("display", "none");
               }
               if ($("#promotionTypeId").val() == "1" && $("#productVendor").length == 0) {
                    $.ajax({
                       url: "/Promotion/GetFilteredProductGroup?vendorId=-1",
                        type: 'Get',
                        dataType: 'json',
                        success: function (result) {
                            debugger;
                            var options = "<option value='-1'> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                            if (result.status === "success") {
                                debugger;

                                if (result.data.length != 0) {
                                    (result.data).forEach(function (item) {
                                        var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                        options += op;
                                    });
                                }
                                var groupSelect = "<div class='form-group col-md-3' id='groupSection'><label>" + '@Language.GetString("tbl_ProductGroup")' +"</label>" +
                                    "<select class='form-control selectpicker' id='productGroupId' data-live-search='true'>" + options + "</select></div>";
                                $("#firstRow").append(groupSelect);
                                $("#productGroupId").selectpicker();
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("@error");
                            alert(xhr.status);
                            alert(thrownError);
                        }
                    });
               }
            });

     $("#discountTypeId").change(function () {
          debugger;
          if ($(this).val() != "-1") {
              switch ($(this).val()) {

                  case "0":
                      $("#PriceOrDiscount").css("display", "block");
                      $("#productGroupTypeSection").css("display", "none");
                      $("#productTypeSection").css("display", "none");
                      $(".type2").css("display", "none");
                      break;
                  case "1":
                      $("#PriceOrDiscount").css("display", "block");
                      $("#productGroupTypeSection").css("display", "block");
                      $("#productTypeSection").css("display", "none");
                      $(".type2").css("display", "none");

                      break;
                  case "2":
                      $("#PriceOrDiscount").css("display", "none");
                      $("#productGroupTypeSection").css("display", "block");
                      $("#productTypeSection").css("display", "block");
                      $(".type2").css("display", "block");
                      break;
              }
          }
     });

      $(document).on("change", "#productVendor", function () {
          debugger;
          if ($("#productVendor").val() != "-1") {
                    $.ajax({
                        url: "/Promotion/GetFilteredProductGroup?vendorId=" + $("#productVendor").val(),
                        type: 'Get',
                        dataType: 'json',
                        success: function (result) {
                            debugger;
                            var options = "<option value='-1'> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                            if (result.status === "success") {
                                debugger;
                                if (result.data.length != 0) {
                                    (result.data).forEach(function (item) {
                                        var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                        options += op;
                                    });
                                }
                                var productgroupSelect = "<div class='form-group col-md-3' id='productGroupClassification'><label>" + '@Language.GetString("tbl_ProductGroup")' +"</label>" +
                                    "<select class='form-control selectpicker' id='productGroupId' data-live-search='true' >" + options + "</select></div>";
                                var productGroupTypeSelect = "<label>" + '@Language.GetString("tbl_ProductGroup")' +"</label>" +
                                    "<select class='form-control selectpicker' id='productGroupType' data-live-search='true' >" + options +
                                    "</select><span data-val-result='productGroupType' class='text-danger'></span>";
                                $("#firstRow").append(productgroupSelect);
                                debugger;
                                $("#productGroupTypeSection").append(productGroupTypeSelect);
                                $("#productGroupId").selectpicker();
                                $("#productGroupType").selectpicker();
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("@error");
                            alert(xhr.status);
                            alert(thrownError);
                        }
                    });
          }
          else {
                    $("#productGroupId").remove();
               }
      });
       $(document).on("change", "#productGroupId", function () {
               if ($("#productGroupId").val() != "-1" && $("#promotionTypeId").val() == "2")
                {
                    $.ajax({
                    url: "/Promotion/GetFilteredProduct?productGroupId=" + $("#productGroupId").val() + "&vendorId=" + $("#productVendor").val(),
                    type: 'Get',
                    dataType : 'json',
                  success: function (result) {
                      debugger;
                      var options = "<option value='-1'> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                      if (result.status === "success") {
                          debugger;
                          if (result.data.length != 0) {
                              (result.data).forEach(function (item) {
                                  var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                  options += op;
                              });
                          }
                          var productSection = "<div class='form-group col-md-3' id='productClassification'><label for='productId'>" +'@Language.GetString("Product")'+"</label><br />" +
                              "<select class='form-control selectpicker' id='productId' data-live-search='true' >" + options + "</select></div>";

                          $("#firstRow").append(productSection);
                          $("#productId").selectpicker();
                          $("#firstRow").append("<div class='col-md-1' style='margin-top:1%;' id='addButtonSection'><div style='margin:auto;display:inline-block;'>" +
                              "<button type='button' class='btn btn-info rounded-circle bg-gradient' onclick='addProductToPromotion()'>" +
                              "<i class='fa fa-plus' style='position: relative;padding: 3px;'></i></botton></div></div>");
                         /* $("#addButtonSection").css("display", "block");*/
                          }
                  },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert("@error");
                        alert(xhr.status);
                        alert(thrownError);
                    }
                   });

                }
                else {
                   $("#productClassification").remove();
                }
       });
      $(document).on("change", "#productGroupType", function () {
          fillProductTypeIdSelect();
      });


     $("#btnAddPromotion").click(function () {
        debugger;
        var flag = false;


         if ("@Model.PromotionId" != "" && $("#ModificationReason").val() == "") {
                    $("span[data-val-result='ModificationReason']").html('@Language.GetString("AlertAndMessage_ModificationReason")');
                    flag = true;
                }
         if ($("#title").val() == "") {
              $("span[data-val-result='title']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                    flag = true;
         }
         if ($("#currencyId").val() == "-1") {
              $("span[data-val-result='currencyId']").html('@Language.GetString("AlertAndMessage_SelectOneItem")');
                    flag = true;
         }
         if ($("#promotionTypeId").val() == "-1") {
             $("span[data-val-result='promotionTypeId']").html('@Language.GetString("AlertAndMessage_SelectOneItem")');
                    flag = true;
         }
         if ($("#discountTypeId").val() == "-1") {
             $("span[data-val-result='discountTypeId']").html('@Language.GetString("AlertAndMessage_SelectOneItem")');
                    flag = true;
         }
         if ($("#PriceOrDiscount").css("display") == "block" && $("#value").val() == "") {
              $("span[data-val-result='value']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                    flag = true;
         }
         if ($("#dtpFromDate").val() == "")
         {
             $("span[data-val-result='FromDate']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                    flag = true;
         }
          if ($("#dtpToDate").val() == "")
         {
             $("span[data-val-result='ToDate']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                    flag = true;
         }
         if ($("#promotionTypeId").val() == "1") {
             if ($("#productGroupId").val() == "-1") {
                 $("span[data-val-result='productGroupId']").html('@Language.GetString("AlertAndMessage_SelectOneItem")');
                 flag = true;
             }
         }
         if ($("#promotionTypeId").val() == "2")
         {
             if ($("#productId").val() == "-1") {
                 $("span[data-val-result='productId']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
                 flag = true;
             }
         }

         if ($("#discountTypeId").val() == "2")
         {
             if ($("#ProductIdType").val() == "-1") {
                 $("span[data-val-result='ProductIdType']").html('@Language.GetString("AlertAndMessage_SelectOneItem")');
                 flag = true;
             }
             if ($("#boughtCount").val() == "") {
                 $("span[data-val-result='boughtCount']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
             }
             if ($("#promotedCountofUnit").val() == "") {
                 $("span[data-val-result='promotedCountofUnit']").html('@Language.GetString("AlertAndMessage_FillEssentialFields")');
             }
         }
         if (!flag) {
             var dataModel = FillDataToSend();
            $.ajax({
                url: "@Model.PromotionId" != "" ? "/Promotion/Edit" : "/Promotion/Add",
                    contentType: 'application/json',
                    data: JSON.stringify(dataModel),
                type: 'Post',
                beforeSend: function () {
                    debugger;
                    AddLoading($("#addPromotionCard"));
                },
                success: function (result) {
                    debugger;
                    AddLoading($("#addPromotionCard"));
                    if (result.status === "Success") {
                        Swal.fire({
                            icon: 'success',
                            text: result.message,
                            showConfirmButton: false,
                            timer: 3000
                        }).then(() => {
                            window.location.href = '@Url.Action("List")';
                        });
                    }else
                    if (result.status === "ModelError") {
                        var spanErrorList = $('span[data-val-result]');
                        if (spanErrorList.length > 1) {
                            spanErrorList.each(function() {
                                $(this).html("");
                                $(this).parent().removeClass("has-error");
                            });
                        } else {
                            spanErrorList.html("");
                            spanErrorList.parent().removeClass("has-error");
                        }
                        if (result.modelStateErrors !== null) {
                                $('[data-val-result=' + value.key + ']').html(value.errorMessage);
                                $('[data-val-result=' + value.key + ']').parent().addClass("has-error");
                            }
                        }
                    },
                @*error: function (xhr, ajaxOptions, thrownError) {
                    alert("@error");
                    alert(xhr.status);
                    alert(thrownError);
                },*@
                complete: function () {
                    removeLoading($("#addProductSpecificationGroupCard"));
                }
                });
                }

            });
        });
    function generateVendorSection() {
        debugger;
        var vendorSelect = "";
        if ('@ViewBag.IsSysAcc' == "True") {
                                var list = @Json.Serialize(ViewBag.Vendors) ;
                                 vendorSelect = "<div class='form-group col-md-3' id='vendorSection'><label for='productVendor'>"
                + '@Language.GetString("ProductVendor")' + "</label><br /><select class='form-control' id='productVendor' data-live-search='true'>";
            var options = "<option value='-1'>" + '@Language.GetString("AlertAndMessage_Choose")' + "</option>";
                                (list).forEach(function (item) {
                                    var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                    options += op;
                                });
                                vendorSelect += options + "</select>";
        }
        return vendorSelect;
    }
    function FillDataToSend() {
            debugger;
            var obj = {};
           obj.Infoes = [];
           obj.PromotionId = $("#PromotionId").val();
          /* obj.ModificationReason = $("#ModificationReason").val();*/
            obj.Title = $("#title").val();
            obj.CurrencyId = $("#currencyId").val();
            obj.CurrencyName = $("#currencyId option:selected").text();
            obj.PromotionTypeId = parseInt($("#promotionTypeId").val());
            obj.DiscountTypeId = parseInt($("#discountTypeId").val());
            obj.PersianStartDate = $("#dtpFromDate").val();
            obj.PersianEndDate = $("#dtpToDate").val();
        if ($("#promotionTypeId").val() == "1") {
            //productGroup
            var model = {};
            model.AffectedProductGroupId = $("#productGroupId").val();
            model.AffectedProductGroupName = $("#productGroupId option:selected").text();
            model.ProductVendorId = $("#productVendor").val();
            model.ProductVendorName = $("#productVendor option:selected").text();
            obj.Infoes.push(model);
            }
            else
            if ($("#promotionTypeId").val() == "2") {
                //Product
                //multiselect
                $("#infoList tr").each(function () {
                    var model = {}
                    model.AffectedProductId = $(this).find("td:eq(5)").text();
                    model.AffectedProductName = $(this).find("td:eq(4)").text();
                    model.AffectedProductGroupId = $(this).find("td:eq(3)").text();
                    model.AffectedProductGroupName = $(this).find("td:eq(2)").text();
                    model.ProductVendorId = $(this).find("td:eq(1)").text();
                    model.ProductVendorName = $(this).find("td:eq(0)").text();

                    obj.Infoes.push(model);
                });
            }
            if ($("#discountTypeId").val() == "0" || $("#discountTypeId").val() == "1") {
                obj.Value = parseFloat($("#value").val());
            }
            else if ($("#discountTypeId").val() == "2")
            {
                debugger;
                obj.PromotedProductId = $("#ProductIdType").val();
                obj.PromotedProductName = $("#ProductIdType option:selected").text();
                obj.GroupIdOfPromotedProduct = $("#productGroupType").val();
                obj.GroupNameofPromotedProduct = $("#productGroupType option:selected").text();
                obj.BoughtCount = parseInt($("#boughtCount").val());
                obj.PromotedCountofUnit = parseInt($("#promotedCountofUnit").val());
            }
            obj.IsDeleted = false;
            debugger;
            return obj;
        }
        function LoadData() {
            debugger;
            var model = @Json.Serialize(Model);
            if (model.promotionId != "") {
                $("#dtpFromDate").val(model.persianStartDate);
                if (model.persianEndDate != "") {
                    $("#dtpToDate").val(model.persianEndDate);
                }
                debugger;
              
                if (model.promotionTypeId == "1") {
                    {
                        //vendor
                        $("#firstRow").append(generateVendorSection());
                        debugger;
                        if (model.infoes.length > 0) {
                            $("#productVendor").selectpicker('val', model.infoes[0].productVendorId);
                        }


                        //group
                        var vendorId = "-1";
                        if (model.infoes.length > 0 && model.infoes[0].productVendorId  != "") {
                            vendorId = model.infoes[0].productVendorId;
                        }
                        debugger;
                        $.ajax({
                            url: "/Promotion/GetFilteredProductGroup?vendorId=" + vendorId,
                            type: 'Get',
                            dataType: 'json',
                            success: function (result) {
                                debugger;
                                var options = "<option value='-1'> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                                if (result.status === "success") {
                                    debugger;
                                    if (result.data.length != 0) {
                                        (result.data).forEach(function (item) {
                                            var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                            options += op;
                                        });
                                    }
                                    var groupSelect = "<div class='form-group col-md-3' id='groupSection'><label>" + '@Language.GetString("tbl_ProductGroup")' + "</label>" +
                                        "<select class='form-control selectpicker' id='productGroupId' data-live-search='true'>" + options + "</select></div>";

                                    var productGroupTypeSelect = "<label>" + '@Language.GetString("tbl_ProductGroup")' + "</label>" +
                                        "<select class='form-control selectpicker' id='productGroupType' data-live-search='true' >" + options +
                                        "</select><span data-val-result='productGroupType' class='text-danger'></span>";
                                    $("#firstRow").append(groupSelect);
                                    debugger;
                                    $("#productGroupTypeSection").append(productGroupTypeSelect);
                                    $("#productGroupType").selectpicker('val', model.groupIdOfPromotedProduct);
                                    $("#productGroupId").selectpicker('val', model.infoes[0].affectedProductGroupId);

                                }
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert("@error");
                                alert(xhr.status);
                                alert(thrownError);
                            }
                        });
                    }
                }
                if ($("#discountTypeId").val() == "2" && $("#ProductIdType").length == 0) {
                    debugger;
                    fillProductGroupTypeSelect(model.groupIdOfPromotedProduct, model.promotedProductId);
                    $(".type2").css("display", "block");
                    $("#PriceOrDiscount").css("display", "none");
                }

            }
        }


        function addProductToPromotion() {
            debugger;
           /* alert("aaaaaaa");*/
            if ($("#productId").val() != "-1") {
                var vendorId = "";
                var vendorName = "";
                if ($("#productVendor").length != 0) {
                    vendorId = $("#productVendor").val();
                    vendorName = $("#productVendor option:selected").text();
                }
                var tr = "<tr style='text-align: center;'><td>" + vendorName
                    + "</td><td style='display:none;'>" + vendorId
                    + "</td><td>" + $("#productGroupId option:selected").text()
                    + "</td><td style='display:none;'>" + $("#productGroupId").val()
                    + "</td><td>" + $("#productId option:selected").text()
                    +"</td><td style='display:none;'>" + $("#productId").val()
                    + "</td><td><button type='button' class='btn btn-danger rounded-circle bg-gradient' onclick='deleteFromList(this);'><i class='fa fa-minus' style='position: relative;padding:3px;'></i></button></td></tr>";
                if ($("#infoList tr").length == 1 && $("#infoList tr")[0].children.length == 1) {
                    $("#infoList tr")[0].remove();
                }
                $("#infoList").append(tr);
            }
        }

        function deleteFromList(sender) {
            debugger;
            var tr = $(sender).parent().parent();
            $(tr).remove();
        }

        function fillProductGroupTypeSelect(selectedGroupId = "", selectedProductId ="") {
            var vendorId = "0";//server converts to currentUser
            if ($("#productVendor").length != 0) {
                vendorId = $("#productVendor").val();
            }
             $.ajax({
                 url: "/Promotion/GetFilteredProductGroup?vendorId=" + vendorId ,
                        type: 'Get',
                        dataType: 'json',
                        success: function (result) {
                            debugger;
                            var options = "<option value='-1'> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                            if (result.status === "success") {
                                debugger;
                                if (result.data.length != 0) {
                                    (result.data).forEach(function (item) {
                                        var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                        options += op;
                                    });
                                }
                                
                                var productGroupTypeSelect = "<label>" + '@Language.GetString("tbl_ProductGroup")' +"</label>" +
                                    "<select class='form-control selectpicker' id='productGroupType' data-live-search='true' >" + options +
                                    "</select><span data-val-result='productGroupType' class='text-danger'></span>";
                               
                                $("#productGroupTypeSection").append(productGroupTypeSelect);

                                if (selectedGroupId != "") {
                                    $("#productGroupType").selectpicker('val', selectedGroupId );
                                } else {
                                    $("#productGroupType").selectpicker();
                                }
                                $("#productGroupTypeSection").css("display", "block");
                                fillProductTypeIdSelect(selectedProductId);
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("@error");
                            alert(xhr.status);
                            alert(thrownError);
                        }
                    });
        }

        function fillProductTypeIdSelect(selectedProductId = "") {
            debugger;
          if ($("#productGroupType").val() != "-1" && $("#discountTypeId").val() == "2")
          {
              var vendorId = "0";
              if ($("#productVendor").length != 0) {
                  vendorId = $("#productVendor").val();
              }
                    $.ajax({
                        url: "/Promotion/GetFilteredProduct?productGroupId=" + $("#productGroupType").val() + "&vendorId=" + vendorId,
                    type: 'Get',
                    dataType : 'json',
                  success: function (result) {
                      debugger;
                      var options = "<option value='-1'> " + '@Language.GetString("AlertAndMessage_Choose")' + " </option>";
                      if (result.status === "success") {
                          debugger;
                          if (result.data.length != 0) {
                              (result.data).forEach(function (item) {
                                  var op = "<option value='" + item.value + "'>" + item.text + "</option>";
                                  options += op;
                              });
                          }
                          var productTypeSelect = "<label for=ProductIdType>" + '@Language.GetString("Product")' + "</label><br />" +
                              "<select class=form-control selectpicker id='ProductIdType' data-live-search='true' >" + options +
                              "</select><span data-val-result='ProductIdType' class='text-danger'></span>";

                          $("#productTypeSection").append(productTypeSelect);
                          if (selectedProductId == "") {
                              $("#ProductIdType").selectpicker();
                          } else {
                              $("#ProductIdType").selectpicker('val', selectedProductId);
                          }
                         /* $(".type2").css("display", "block");*/
                          $("#productTypeSection").css("display", "block");
                     }
                  },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert("@error");
                        alert(xhr.status);
                        alert(thrownError);
                    }
                   });
                }
        }



    </script>
}




